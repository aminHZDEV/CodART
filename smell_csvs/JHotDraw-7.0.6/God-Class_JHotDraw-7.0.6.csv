org.jhotdraw.undo.UndoRedoManager	[org.jhotdraw.undo.UndoRedoManager::java.beans.PropertyChangeSupport propertySupport, org.jhotdraw.undo.UndoRedoManager::addPropertyChangeListener(java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::removePropertyChangeListener(java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, boolean, boolean):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, int, int):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object):void, org.jhotdraw.undo.UndoRedoManager::boolean hasSignificantEdits, org.jhotdraw.undo.UndoRedoManager::setHasSignificantEdits(boolean):void]
org.jhotdraw.undo.UndoRedoManager	[org.jhotdraw.undo.UndoRedoManager::java.beans.PropertyChangeSupport propertySupport, org.jhotdraw.undo.UndoRedoManager::addPropertyChangeListener(java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::removePropertyChangeListener(java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, boolean, boolean):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, int, int):void, org.jhotdraw.undo.UndoRedoManager::firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object):void]
org.jhotdraw.xml.NanoXMLDOMOutput	[org.jhotdraw.xml.NanoXMLDOMOutput::java.lang.String doctype, org.jhotdraw.xml.NanoXMLDOMOutput::net.n3.nanoxml.XMLElement document, org.jhotdraw.xml.NanoXMLDOMOutput::save(java.io.Writer):void, org.jhotdraw.xml.NanoXMLDOMOutput::print(java.io.PrintWriter):void, org.jhotdraw.xml.NanoXMLDOMOutput::save(java.io.OutputStream):void]
org.jhotdraw.xml.NanoXMLLiteDOMOutput	[org.jhotdraw.xml.NanoXMLLiteDOMOutput::java.lang.String doctype, org.jhotdraw.xml.NanoXMLLiteDOMOutput::save(java.io.Writer):void, org.jhotdraw.xml.NanoXMLLiteDOMOutput::nanoxml.XMLElement document, org.jhotdraw.xml.NanoXMLLiteDOMOutput::print(java.io.PrintWriter):void, org.jhotdraw.xml.NanoXMLLiteDOMOutput::save(java.io.OutputStream):void]
org.jhotdraw.app.OSXPaletteHandler	[org.jhotdraw.app.OSXPaletteHandler::java.util.HashMap<java.awt.Window,org.jhotdraw.app.Project> windows, org.jhotdraw.app.OSXPaletteHandler::add(java.awt.Window, org.jhotdraw.app.Project):void, org.jhotdraw.app.OSXPaletteHandler::remove(java.awt.Window, org.jhotdraw.app.Project):void, org.jhotdraw.app.OSXPaletteHandler::java.awt.event.WindowFocusListener focusHandler]
org.jhotdraw.app.OSXPaletteHandler	[org.jhotdraw.app.OSXPaletteHandler::java.util.HashSet<java.awt.Window> palettes, org.jhotdraw.app.OSXPaletteHandler::getPalettes():java.util.Set<java.awt.Window>, org.jhotdraw.app.OSXPaletteHandler::showPalettes():void]
org.jhotdraw.draw.AbstractCompositeFigure	[org.jhotdraw.draw.AbstractCompositeFigure::java.awt.geom.Rectangle2D.Double drawBounds, org.jhotdraw.draw.AbstractCompositeFigure::invalidateBounds():void, org.jhotdraw.draw.AbstractCompositeFigure::java.awt.geom.Rectangle2D.Double bounds]
org.jhotdraw.draw.action.SwingWorker	[org.jhotdraw.draw.action.SwingWorker::java.lang.Object value, org.jhotdraw.draw.action.SwingWorker::org.jhotdraw.draw.action.SwingWorker.ThreadVar threadVar, org.jhotdraw.draw.action.SwingWorker::start():void, org.jhotdraw.draw.action.SwingWorker::get():java.lang.Object, org.jhotdraw.draw.action.SwingWorker::interrupt():void]
org.jhotdraw.samples.svg.SVGApplicationModel	[org.jhotdraw.samples.svg.SVGApplicationModel::addAttributesButtonsTo(javax.swing.JToolBar, org.jhotdraw.draw.DrawingEditor):void, org.jhotdraw.samples.svg.SVGApplicationModel::addColorButtonsTo(javax.swing.JToolBar, org.jhotdraw.draw.DrawingEditor):void, org.jhotdraw.samples.svg.SVGApplicationModel::addStrokeButtonsTo(javax.swing.JToolBar, org.jhotdraw.draw.DrawingEditor):void]
org.jhotdraw.xml.JavaxDOMOutput	[org.jhotdraw.xml.JavaxDOMOutput::java.lang.String doctype, org.jhotdraw.xml.JavaxDOMOutput::save(java.io.OutputStream):void, org.jhotdraw.xml.JavaxDOMOutput::save(java.io.Writer):void, org.jhotdraw.xml.JavaxDOMOutput::org.w3c.dom.Document document]
org.jhotdraw.app.AbstractProject	[org.jhotdraw.app.AbstractProject::java.util.prefs.Preferences prefs, org.jhotdraw.app.AbstractProject::createOpenChooser():javax.swing.JFileChooser, org.jhotdraw.app.AbstractProject::createSaveChooser():javax.swing.JFileChooser]
org.jhotdraw.draw.FloatingTextArea	[org.jhotdraw.draw.FloatingTextArea::javax.swing.JTextArea editWidget, org.jhotdraw.draw.FloatingTextArea::requestFocus():void, org.jhotdraw.draw.FloatingTextArea::getText():java.lang.String, org.jhotdraw.draw.FloatingTextArea::getPreferredSize(int):java.awt.Dimension]
org.jhotdraw.draw.FloatingTextArea	[org.jhotdraw.draw.FloatingTextArea::javax.swing.JScrollPane editScrollContainer, org.jhotdraw.draw.FloatingTextArea::org.jhotdraw.draw.DrawingView view, org.jhotdraw.draw.FloatingTextArea::endOverlay():void, org.jhotdraw.draw.FloatingTextArea::setBounds(java.awt.geom.Rectangle2D.Double, java.lang.String):void, org.jhotdraw.draw.FloatingTextArea::createOverlay(org.jhotdraw.draw.DrawingView, org.jhotdraw.draw.TextHolder):void]
org.jhotdraw.draw.FloatingTextField	[org.jhotdraw.draw.FloatingTextField::javax.swing.JTextField editWidget, org.jhotdraw.draw.FloatingTextField::requestFocus():void, org.jhotdraw.draw.FloatingTextField::getInsets():java.awt.Insets, org.jhotdraw.draw.FloatingTextField::addActionListener(java.awt.event.ActionListener):void, org.jhotdraw.draw.FloatingTextField::removeActionListener(java.awt.event.ActionListener):void, org.jhotdraw.draw.FloatingTextField::setBounds(java.awt.Rectangle, java.lang.String):void, org.jhotdraw.draw.FloatingTextField::getText():java.lang.String, org.jhotdraw.draw.FloatingTextField::getPreferredSize(int):java.awt.Dimension]
org.jhotdraw.draw.HandleMulticaster	[org.jhotdraw.draw.HandleMulticaster::java.util.LinkedList<org.jhotdraw.draw.Handle> handles, org.jhotdraw.draw.HandleMulticaster::draw(java.awt.Graphics2D):void, org.jhotdraw.draw.HandleMulticaster::keyPressed(java.awt.event.KeyEvent):void, org.jhotdraw.draw.HandleMulticaster::keyReleased(java.awt.event.KeyEvent):void, org.jhotdraw.draw.HandleMulticaster::keyTyped(java.awt.event.KeyEvent):void, org.jhotdraw.draw.HandleMulticaster::trackDoubleClick(java.awt.Point, int, org.jhotdraw.draw.DrawingView):void, org.jhotdraw.draw.HandleMulticaster::trackStep(java.awt.Point, java.awt.Point, int, org.jhotdraw.draw.DrawingView):void]
org.jhotdraw.gui.JSheet	[org.jhotdraw.gui.JSheet::javax.swing.event.EventListenerList listenerList, org.jhotdraw.gui.JSheet::addSheetListener(org.jhotdraw.gui.event.SheetListener):void, org.jhotdraw.gui.JSheet::removeSheetListener(org.jhotdraw.gui.event.SheetListener):void]
org.jhotdraw.gui.JSheet	[org.jhotdraw.gui.JSheet::javax.swing.event.EventListenerList listenerList, org.jhotdraw.gui.JSheet::addSheetListener(org.jhotdraw.gui.event.SheetListener):void, org.jhotdraw.gui.JSheet::removeSheetListener(org.jhotdraw.gui.event.SheetListener):void, org.jhotdraw.gui.JSheet::fireOptionSelected(javax.swing.JOptionPane, int, java.lang.Object, java.lang.Object):void, org.jhotdraw.gui.JSheet::fireOptionSelected(javax.swing.JFileChooser, int):void]
org.jhotdraw.draw.action.AbstractViewAction	[org.jhotdraw.draw.action.AbstractViewAction::org.jhotdraw.draw.DrawingEditor editor, org.jhotdraw.draw.action.AbstractViewAction::getView():org.jhotdraw.draw.DrawingView, org.jhotdraw.draw.action.AbstractViewAction::org.jhotdraw.draw.DrawingView view, org.jhotdraw.draw.action.AbstractViewAction::getDrawing():org.jhotdraw.draw.Drawing, org.jhotdraw.draw.action.AbstractViewAction::fireUndoableEditHappened(javax.swing.undo.UndoableEdit):void, org.jhotdraw.draw.action.AbstractViewAction::updateEnabledState():void]
org.jhotdraw.app.DefaultApplicationModel	[org.jhotdraw.app.DefaultApplicationModel::java.lang.String name, org.jhotdraw.app.DefaultApplicationModel::setName(java.lang.String):void, org.jhotdraw.app.DefaultApplicationModel::java.lang.String version, org.jhotdraw.app.DefaultApplicationModel::setVersion(java.lang.String):void, org.jhotdraw.app.DefaultApplicationModel::java.lang.String copyright, org.jhotdraw.app.DefaultApplicationModel::setCopyright(java.lang.String):void]
org.jhotdraw.app.DefaultApplicationModel	[org.jhotdraw.app.DefaultApplicationModel::java.lang.String name, org.jhotdraw.app.DefaultApplicationModel::setName(java.lang.String):void, org.jhotdraw.app.DefaultApplicationModel::java.lang.String version, org.jhotdraw.app.DefaultApplicationModel::setVersion(java.lang.String):void]
org.jhotdraw.draw.CreationTool	[org.jhotdraw.draw.CreationTool::java.util.Map<org.jhotdraw.draw.AttributeKey,java.lang.Object> attributes, org.jhotdraw.draw.CreationTool::createFigure():org.jhotdraw.draw.Figure, org.jhotdraw.draw.CreationTool::org.jhotdraw.draw.Figure prototype]
org.jhotdraw.draw.action.JPopupButton	[org.jhotdraw.draw.action.JPopupButton::java.awt.Font itemFont, org.jhotdraw.draw.action.JPopupButton::setItemFont(java.awt.Font):void, org.jhotdraw.draw.action.JPopupButton::updateFont(javax.swing.MenuElement):void]
nanoxml.XMLElement	[nanoxml.XMLElement::java.util.ArrayList children, nanoxml.XMLElement::java.lang.String contents, nanoxml.XMLElement::java.lang.String name, nanoxml.XMLElement::int parserLineNr, nanoxml.XMLElement::java.util.HashMap entities, nanoxml.XMLElement::resolveEntity(java.lang.StringBuffer):void, nanoxml.XMLElement::createElement():nanoxml.XMLElement, nanoxml.XMLElement::boolean ignoreWhitespace, nanoxml.XMLElement::boolean isEncodeUnicodeCharacters, nanoxml.XMLElement::writeEncoded(java.io.Writer, java.lang.String):void, nanoxml.XMLElement::scanString(java.lang.StringBuffer):void, nanoxml.XMLElement::skipComment():void, nanoxml.XMLElement::skipSpecialTag(int):void, nanoxml.XMLElement::char charReadTooMuch, nanoxml.XMLElement::scanPCData(java.lang.StringBuffer):void, nanoxml.XMLElement::scanIdentifier(java.lang.StringBuffer):void, nanoxml.XMLElement::checkCDATA(java.lang.StringBuffer):boolean, nanoxml.XMLElement::checkLiteral(java.lang.String):boolean, nanoxml.XMLElement::scanWhitespace():char, nanoxml.XMLElement::scanWhitespace(java.lang.StringBuffer):char, nanoxml.XMLElement::readChar():char, nanoxml.XMLElement::java.io.Reader reader, nanoxml.XMLElement::invalidValueSet(java.lang.String):nanoxml.XMLParseException, nanoxml.XMLElement::invalidValue(java.lang.String, java.lang.String):nanoxml.XMLParseException, nanoxml.XMLElement::unexpectedEndOfData():nanoxml.XMLParseException, nanoxml.XMLElement::syntaxError(java.lang.String):nanoxml.XMLParseException, nanoxml.XMLElement::expectedInput(java.lang.String):nanoxml.XMLParseException, nanoxml.XMLElement::unknownEntity(java.lang.String):nanoxml.XMLParseException, nanoxml.XMLElement::parseFromReader(java.io.Reader, int):void, nanoxml.XMLElement::scanElement(nanoxml.XMLElement):void, nanoxml.XMLElement::countChildren():int, nanoxml.XMLElement::iterateChildren():java.util.Iterator, nanoxml.XMLElement::getChildren():java.util.ArrayList, nanoxml.XMLElement::removeChild(nanoxml.XMLElement):void, nanoxml.XMLElement::write(java.io.Writer):void, nanoxml.XMLElement::print(java.io.PrintWriter, int):void, nanoxml.XMLElement::parseString(java.lang.String):void, nanoxml.XMLElement::parseString(java.lang.String, int, int, int):void, nanoxml.XMLElement::parseCharArray(char[], int, int, int):void, nanoxml.XMLElement::createElement(java.lang.String):nanoxml.XMLElement]
org.jhotdraw.samples.draw.DrawingPanel	[org.jhotdraw.samples.draw.DrawingPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.draw.DrawingPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.draw.DrawingPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.draw.DrawingPanel::initComponents():void, org.jhotdraw.samples.draw.DrawingPanel::setDrawing(org.jhotdraw.draw.Drawing):void]
org.jhotdraw.samples.net.NetPanel	[org.jhotdraw.samples.net.NetPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.net.NetPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.net.NetPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.net.NetPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.net.NetPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.net.NetPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.net.NetPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.net.NetPanel::initComponents():void, org.jhotdraw.samples.net.NetPanel::setDrawing(org.jhotdraw.draw.Drawing):void]
org.jhotdraw.samples.pert.PertPanel	[org.jhotdraw.samples.pert.PertPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.pert.PertPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.pert.PertPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.pert.PertPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.pert.PertPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.pert.PertPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.pert.PertPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.pert.PertPanel::initComponents():void, org.jhotdraw.samples.pert.PertPanel::setDrawing(org.jhotdraw.draw.Drawing):void]
org.jhotdraw.samples.svg.SVGPanel	[org.jhotdraw.samples.svg.SVGPanel::org.jhotdraw.undo.UndoRedoManager undoManager, org.jhotdraw.samples.svg.SVGPanel::org.jhotdraw.draw.DefaultDrawingView view, org.jhotdraw.samples.svg.SVGPanel::javax.swing.JToolBar attributesToolbar, org.jhotdraw.samples.svg.SVGPanel::javax.swing.JToolBar creationToolbar, org.jhotdraw.samples.svg.SVGPanel::javax.swing.JPanel jPanel1, org.jhotdraw.samples.svg.SVGPanel::javax.swing.JScrollPane scrollPane, org.jhotdraw.samples.svg.SVGPanel::javax.swing.ButtonGroup toolButtonGroup, org.jhotdraw.samples.svg.SVGPanel::initComponents():void, org.jhotdraw.samples.svg.SVGPanel::setDrawing(org.jhotdraw.draw.Drawing):void]

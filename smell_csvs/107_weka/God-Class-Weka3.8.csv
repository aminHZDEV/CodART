weka.gui.experiment.ResultsPanel	[weka.gui.experiment.ResultsPanel::javax.swing.JLabel m_FromLab, weka.gui.experiment.ResultsPanel::weka.experiment.InstanceQuery m_InstanceQuery, weka.gui.experiment.ResultsPanel::setInstancesFromFile(java.io.File):void, weka.gui.experiment.ResultsPanel::setInstancesFromDatabaseTable(java.lang.String):void, weka.gui.experiment.ResultsPanel::setInstancesFromExp(weka.experiment.Experiment):void, weka.gui.experiment.ResultsPanel::setInstancesFromDBaseQuery():void, weka.gui.experiment.ResultsPanel::javax.swing.DefaultComboBoxModel m_CompareModel, weka.gui.experiment.ResultsPanel::javax.swing.DefaultComboBoxModel m_SortModel, weka.gui.experiment.ResultsPanel::javax.swing.JButton m_DatasetKeyBut, weka.gui.experiment.ResultsPanel::javax.swing.DefaultListModel m_DatasetKeyModel, weka.gui.experiment.ResultsPanel::javax.swing.JButton m_ResultKeyBut, weka.gui.experiment.ResultsPanel::javax.swing.JButton m_SwapDatasetKeyAndResultKeyBut, weka.gui.experiment.ResultsPanel::javax.swing.DefaultListModel m_ResultKeyModel, weka.gui.experiment.ResultsPanel::javax.swing.JComboBox m_TesterClasses, weka.gui.experiment.ResultsPanel::javax.swing.JComboBox m_CompareCombo, weka.gui.experiment.ResultsPanel::javax.swing.JComboBox m_SortCombo, weka.gui.experiment.ResultsPanel::javax.swing.JTextField m_SigTex, weka.gui.experiment.ResultsPanel::weka.core.Instances m_Instances, weka.gui.experiment.ResultsPanel::javax.swing.DefaultListModel m_TestsModel, weka.gui.experiment.ResultsPanel::javax.swing.DefaultListModel m_DisplayedModel, weka.gui.experiment.ResultsPanel::javax.swing.JButton m_TestsButton, weka.gui.experiment.ResultsPanel::javax.swing.JButton m_DisplayedButton, weka.gui.experiment.ResultsPanel::javax.swing.JButton m_OutputFormatButton, weka.gui.experiment.ResultsPanel::javax.swing.JButton m_PerformBut, weka.gui.experiment.ResultsPanel::setTester():void, weka.gui.experiment.ResultsPanel::javax.swing.JPanel m_PanelDatasetResultKeys, weka.gui.experiment.ResultsPanel::java.awt.Dimension COMBO_SIZE, weka.gui.experiment.ResultsPanel::setComboSizes():void, weka.gui.experiment.ResultsPanel::javax.swing.JList m_DatasetKeyList, weka.gui.experiment.ResultsPanel::javax.swing.JList m_ResultKeyList, weka.gui.experiment.ResultsPanel::weka.experiment.Tester m_TTester, weka.gui.experiment.ResultsPanel::setResultKeyFromDialog():void, weka.gui.experiment.ResultsPanel::setDatasetKeyFromDialog():void, weka.gui.experiment.ResultsPanel::swapDatasetKeyAndResultKey():void, weka.gui.experiment.ResultsPanel::javax.swing.JList m_TestsList, weka.gui.experiment.ResultsPanel::setTestBaseFromDialog():void, weka.gui.experiment.ResultsPanel::javax.swing.JList m_DisplayedList, weka.gui.experiment.ResultsPanel::setDisplayedFromDialog():void, weka.gui.experiment.ResultsPanel::javax.swing.JCheckBox m_ShowStdDevs, weka.gui.experiment.ResultsPanel::weka.experiment.ResultMatrix m_ResultMatrix, weka.gui.experiment.ResultsPanel::weka.gui.ResultHistoryPanel m_History, weka.gui.experiment.ResultsPanel::javax.swing.JButton m_SaveOutBut, weka.gui.experiment.ResultsPanel::weka.gui.SaveBuffer m_SaveOut, weka.gui.experiment.ResultsPanel::saveBuffer():void, weka.gui.experiment.ResultsPanel::setOutputFormatFromDialog():void, weka.gui.experiment.ResultsPanel::setInstances(weka.core.Instances):void, weka.gui.experiment.ResultsPanel::determineColumnNames(java.lang.String, java.lang.String, weka.core.Instances):java.util.Vector, weka.gui.experiment.ResultsPanel::setTTester():void, weka.gui.experiment.ResultsPanel::performTest():void, weka.gui.experiment.ResultsPanel::setSelectedItem(javax.swing.JComboBox, java.lang.String):void]
weka.gui.experiment.ResultsPanel	[weka.gui.experiment.ResultsPanel::javax.swing.JList m_TestsList, weka.gui.experiment.ResultsPanel::setTestBaseFromDialog():void, weka.gui.experiment.ResultsPanel::javax.swing.JList m_DisplayedList, weka.gui.experiment.ResultsPanel::setDisplayedFromDialog():void, weka.gui.experiment.ResultsPanel::javax.swing.JCheckBox m_ShowStdDevs, weka.gui.experiment.ResultsPanel::weka.experiment.ResultMatrix m_ResultMatrix, weka.gui.experiment.ResultsPanel::weka.gui.ResultHistoryPanel m_History, weka.gui.experiment.ResultsPanel::javax.swing.JButton m_SaveOutBut, weka.gui.experiment.ResultsPanel::weka.gui.SaveBuffer m_SaveOut, weka.gui.experiment.ResultsPanel::saveBuffer():void, weka.gui.experiment.ResultsPanel::setOutputFormatFromDialog():void]
weka.gui.experiment.ResultsPanel	[weka.gui.experiment.ResultsPanel::javax.swing.JButton m_FromExpBut, weka.gui.experiment.ResultsPanel::setExperiment(weka.experiment.Experiment):void, weka.gui.experiment.ResultsPanel::weka.experiment.Experiment m_Exp]
weka.gui.experiment.ResultsPanel	[weka.gui.experiment.ResultsPanel::javax.swing.JList m_TestsList, weka.gui.experiment.ResultsPanel::setTestBaseFromDialog():void, weka.gui.experiment.ResultsPanel::javax.swing.JList m_DisplayedList, weka.gui.experiment.ResultsPanel::setDisplayedFromDialog():void]
weka.gui.experiment.ResultsPanel	[weka.gui.experiment.ResultsPanel::javax.swing.JLabel m_FromLab, weka.gui.experiment.ResultsPanel::weka.experiment.InstanceQuery m_InstanceQuery, weka.gui.experiment.ResultsPanel::setInstancesFromFile(java.io.File):void, weka.gui.experiment.ResultsPanel::setInstancesFromDatabaseTable(java.lang.String):void, weka.gui.experiment.ResultsPanel::setInstancesFromExp(weka.experiment.Experiment):void, weka.gui.experiment.ResultsPanel::setInstancesFromDBaseQuery():void]
weka.gui.experiment.ResultsPanel	[weka.gui.experiment.ResultsPanel::javax.swing.JList m_DatasetKeyList, weka.gui.experiment.ResultsPanel::javax.swing.JList m_ResultKeyList, weka.gui.experiment.ResultsPanel::weka.experiment.Tester m_TTester, weka.gui.experiment.ResultsPanel::setResultKeyFromDialog():void, weka.gui.experiment.ResultsPanel::setDatasetKeyFromDialog():void, weka.gui.experiment.ResultsPanel::swapDatasetKeyAndResultKey():void]
weka.gui.experiment.ResultsPanel	[weka.gui.experiment.ResultsPanel::javax.swing.JButton m_SaveOutBut, weka.gui.experiment.ResultsPanel::weka.gui.SaveBuffer m_SaveOut, weka.gui.experiment.ResultsPanel::saveBuffer():void]
weka.gui.experiment.SimpleSetupPanel	[weka.gui.experiment.SimpleSetupPanel::weka.experiment.Experiment m_Exp, weka.gui.experiment.SimpleSetupPanel::java.beans.PropertyChangeSupport m_Support, weka.gui.experiment.SimpleSetupPanel::java.lang.String m_destinationDatabaseURL, weka.gui.experiment.SimpleSetupPanel::java.lang.String m_destinationFilename, weka.gui.experiment.SimpleSetupPanel::javax.swing.JComboBox m_ResultsDestinationCBox, weka.gui.experiment.SimpleSetupPanel::javax.swing.JTextField m_ResultsDestinationPathTField, weka.gui.experiment.SimpleSetupPanel::javax.swing.JLabel m_ResultsDestinationPathLabel, weka.gui.experiment.SimpleSetupPanel::javax.swing.JButton m_BrowseDestinationButton, weka.gui.experiment.SimpleSetupPanel::int m_numFolds, weka.gui.experiment.SimpleSetupPanel::double m_trainPercent, weka.gui.experiment.SimpleSetupPanel::javax.swing.JComboBox m_ExperimentTypeCBox, weka.gui.experiment.SimpleSetupPanel::javax.swing.JTextField m_ExperimentParameterTField, weka.gui.experiment.SimpleSetupPanel::javax.swing.JLabel m_ExperimentParameterLabel, weka.gui.experiment.SimpleSetupPanel::javax.swing.JRadioButton m_ExpClassificationRBut, weka.gui.experiment.SimpleSetupPanel::int m_numRepetitions, weka.gui.experiment.SimpleSetupPanel::javax.swing.JTextField m_NumberOfRepetitionsTField, weka.gui.experiment.SimpleSetupPanel::javax.swing.JButton m_SaveBut, weka.gui.experiment.SimpleSetupPanel::javax.swing.JRadioButton m_ExpRegressionRBut, weka.gui.experiment.SimpleSetupPanel::javax.swing.JRadioButton m_OrderDatasetsFirstRBut, weka.gui.experiment.SimpleSetupPanel::javax.swing.JRadioButton m_OrderAlgorithmsFirstRBut, weka.gui.experiment.SimpleSetupPanel::weka.gui.experiment.DatasetListPanel m_DatasetListPanel, weka.gui.experiment.SimpleSetupPanel::weka.gui.experiment.AlgorithmListPanel m_AlgorithmListPanel, weka.gui.experiment.SimpleSetupPanel::javax.swing.JButton m_NotesButton, weka.gui.experiment.SimpleSetupPanel::javax.swing.JTextArea m_NotesText, weka.gui.experiment.SimpleSetupPanel::boolean m_userHasBeenAskedAboutConversion, weka.gui.experiment.SimpleSetupPanel::userWantsToConvert():boolean, weka.gui.experiment.SimpleSetupPanel::weka.gui.ExtensionFileFilter m_csvFileFilter, weka.gui.experiment.SimpleSetupPanel::weka.gui.ExtensionFileFilter m_arffFileFilter, weka.gui.experiment.SimpleSetupPanel::javax.swing.JFileChooser m_DestFileChooser, weka.gui.experiment.SimpleSetupPanel::chooseDestinationFile():void, weka.gui.experiment.SimpleSetupPanel::setExperiment(weka.experiment.Experiment):boolean, weka.gui.experiment.SimpleSetupPanel::expTypeChanged():void, weka.gui.experiment.SimpleSetupPanel::expParamChanged():void, weka.gui.experiment.SimpleSetupPanel::numRepetitionsChanged():void]
weka.gui.experiment.SimpleSetupPanel	[weka.gui.experiment.SimpleSetupPanel::weka.gui.experiment.SetupModePanel m_modePanel, weka.gui.experiment.SimpleSetupPanel::javax.swing.filechooser.FileFilter m_ExpFilter, weka.gui.experiment.SimpleSetupPanel::javax.swing.filechooser.FileFilter m_KOMLFilter, weka.gui.experiment.SimpleSetupPanel::javax.swing.filechooser.FileFilter m_XMLFilter, weka.gui.experiment.SimpleSetupPanel::javax.swing.JFileChooser m_FileChooser, weka.gui.experiment.SimpleSetupPanel::openExperiment():void, weka.gui.experiment.SimpleSetupPanel::saveExperiment():void]
weka.gui.experiment.SimpleSetupPanel	[weka.gui.experiment.SimpleSetupPanel::weka.gui.ExtensionFileFilter m_csvFileFilter, weka.gui.experiment.SimpleSetupPanel::weka.gui.ExtensionFileFilter m_arffFileFilter, weka.gui.experiment.SimpleSetupPanel::javax.swing.JFileChooser m_DestFileChooser, weka.gui.experiment.SimpleSetupPanel::chooseDestinationFile():void]
weka.core.matrix.EigenvalueDecomposition	[weka.core.matrix.EigenvalueDecomposition::int n, weka.core.matrix.EigenvalueDecomposition::double[][] V, weka.core.matrix.EigenvalueDecomposition::double[] e, weka.core.matrix.EigenvalueDecomposition::double[] d, weka.core.matrix.EigenvalueDecomposition::double[][] H, weka.core.matrix.EigenvalueDecomposition::double[] ort, weka.core.matrix.EigenvalueDecomposition::orthes():void, weka.core.matrix.EigenvalueDecomposition::getV():weka.core.matrix.Matrix, weka.core.matrix.EigenvalueDecomposition::double cdivr, weka.core.matrix.EigenvalueDecomposition::double cdivi, weka.core.matrix.EigenvalueDecomposition::cdiv(double, double, double, double):void, weka.core.matrix.EigenvalueDecomposition::tred2():void, weka.core.matrix.EigenvalueDecomposition::tql2():void, weka.core.matrix.EigenvalueDecomposition::getD():weka.core.matrix.Matrix, weka.core.matrix.EigenvalueDecomposition::hqr2():void]
weka.core.matrix.EigenvalueDecomposition	[weka.core.matrix.EigenvalueDecomposition::double cdivr, weka.core.matrix.EigenvalueDecomposition::double cdivi, weka.core.matrix.EigenvalueDecomposition::cdiv(double, double, double, double):void]
weka.classifiers.functions.MultilayerPerceptron	[weka.classifiers.functions.MultilayerPerceptron::int m_numEpochs, weka.classifiers.functions.MultilayerPerceptron::setTrainingTime(int):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_autoBuild, weka.classifiers.functions.MultilayerPerceptron::setAutoBuild(boolean):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_gui, weka.classifiers.functions.MultilayerPerceptron::setGUI(boolean):void, weka.classifiers.functions.MultilayerPerceptron::setReset(boolean):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_reset, weka.classifiers.functions.MultilayerPerceptron::int m_valSize, weka.classifiers.functions.MultilayerPerceptron::setValidationSetSize(int):void, weka.classifiers.functions.MultilayerPerceptron::int m_driftThreshold, weka.classifiers.functions.MultilayerPerceptron::setValidationThreshold(int):void]
weka.classifiers.functions.MultilayerPerceptron	[weka.classifiers.functions.MultilayerPerceptron::int m_numEpochs, weka.classifiers.functions.MultilayerPerceptron::setTrainingTime(int):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_autoBuild, weka.classifiers.functions.MultilayerPerceptron::setAutoBuild(boolean):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_gui, weka.classifiers.functions.MultilayerPerceptron::setGUI(boolean):void, weka.classifiers.functions.MultilayerPerceptron::setReset(boolean):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_reset, weka.classifiers.functions.MultilayerPerceptron::int m_valSize, weka.classifiers.functions.MultilayerPerceptron::setValidationSetSize(int):void]
weka.classifiers.functions.MultilayerPerceptron	[weka.classifiers.functions.MultilayerPerceptron::int m_numEpochs, weka.classifiers.functions.MultilayerPerceptron::setTrainingTime(int):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_autoBuild, weka.classifiers.functions.MultilayerPerceptron::setAutoBuild(boolean):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_gui, weka.classifiers.functions.MultilayerPerceptron::setGUI(boolean):void, weka.classifiers.functions.MultilayerPerceptron::setReset(boolean):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_reset]
weka.classifiers.functions.MultilayerPerceptron	[weka.classifiers.functions.MultilayerPerceptron::boolean m_autoBuild, weka.classifiers.functions.MultilayerPerceptron::setAutoBuild(boolean):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_gui, weka.classifiers.functions.MultilayerPerceptron::setGUI(boolean):void, weka.classifiers.functions.MultilayerPerceptron::setReset(boolean):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_reset]
weka.classifiers.functions.MultilayerPerceptron	[weka.classifiers.functions.MultilayerPerceptron::boolean m_gui, weka.classifiers.functions.MultilayerPerceptron::setGUI(boolean):void, weka.classifiers.functions.MultilayerPerceptron::setReset(boolean):void, weka.classifiers.functions.MultilayerPerceptron::boolean m_reset]
weka.gui.graphvisualizer.HierarchicalBCEngine	[weka.gui.graphvisualizer.HierarchicalBCEngine::javax.swing.JRadioButton m_jRbNaiveLayout, weka.gui.graphvisualizer.HierarchicalBCEngine::javax.swing.JRadioButton m_jRbTopdown, weka.gui.graphvisualizer.HierarchicalBCEngine::boolean m_completeReLayout, weka.gui.graphvisualizer.HierarchicalBCEngine::javax.swing.JProgressBar m_progress, weka.gui.graphvisualizer.HierarchicalBCEngine::javax.swing.JCheckBox m_jCbEdgeConcentration, weka.gui.graphvisualizer.HierarchicalBCEngine::javax.swing.JRadioButton m_jRbPriorityLayout, weka.gui.graphvisualizer.HierarchicalBCEngine::javax.swing.JRadioButton m_jRbBottomup, weka.gui.graphvisualizer.HierarchicalBCEngine::javax.swing.JPanel m_controlsPanel, weka.gui.graphvisualizer.HierarchicalBCEngine::makeGUIPanel(boolean):void]
weka.classifiers.lazy.kstar.KStarCache.CacheTable	[weka.classifiers.lazy.kstar.KStarCache.CacheTable::weka.classifiers.lazy.kstar.KStarCache.TableEntry[] m_Table, weka.classifiers.lazy.kstar.KStarCache.CacheTable::double EPSILON, weka.classifiers.lazy.kstar.KStarCache.CacheTable::int m_Count, weka.classifiers.lazy.kstar.KStarCache.CacheTable::isEmpty():boolean, weka.classifiers.lazy.kstar.KStarCache.CacheTable::clear():void, weka.classifiers.lazy.kstar.KStarCache.CacheTable::int m_Threshold, weka.classifiers.lazy.kstar.KStarCache.CacheTable::float m_LoadFactor, weka.classifiers.lazy.kstar.KStarCache.CacheTable::containsKey(double):boolean, weka.classifiers.lazy.kstar.KStarCache.CacheTable::getEntry(double):weka.classifiers.lazy.kstar.KStarCache.TableEntry, weka.classifiers.lazy.kstar.KStarCache.CacheTable::insert(double, double, double):void, weka.classifiers.lazy.kstar.KStarCache.CacheTable::rehash():void, weka.classifiers.lazy.kstar.KStarCache.CacheTable::hashCode(double):int]
weka.gui.DocumentPrinting	[weka.gui.DocumentPrinting::javax.swing.JTextPane m_PrintPane, weka.gui.DocumentPrinting::setContentType(java.lang.String):void, weka.gui.DocumentPrinting::setDocument(java.lang.String, javax.swing.text.Document):void, weka.gui.DocumentPrinting::setDocument(javax.swing.JTextPane):void, weka.gui.DocumentPrinting::getDocument():javax.swing.text.Document, weka.gui.DocumentPrinting::print(javax.swing.JTextPane):void, weka.gui.DocumentPrinting::java.awt.print.PageFormat m_PageFormat, weka.gui.DocumentPrinting::java.awt.print.PrinterJob m_PrinterJob, weka.gui.DocumentPrinting::pageDialog():void, weka.gui.DocumentPrinting::printDialog():void]
weka.gui.DocumentPrinting	[weka.gui.DocumentPrinting::java.awt.print.PageFormat m_PageFormat, weka.gui.DocumentPrinting::java.awt.print.PrinterJob m_PrinterJob, weka.gui.DocumentPrinting::pageDialog():void, weka.gui.DocumentPrinting::printDialog():void]
weka.gui.DocumentPrinting	[weka.gui.DocumentPrinting::javax.swing.JTextPane m_PrintPane, weka.gui.DocumentPrinting::setContentType(java.lang.String):void, weka.gui.DocumentPrinting::setDocument(java.lang.String, javax.swing.text.Document):void, weka.gui.DocumentPrinting::setDocument(javax.swing.JTextPane):void, weka.gui.DocumentPrinting::getDocument():javax.swing.text.Document, weka.gui.DocumentPrinting::print(javax.swing.JTextPane):void]
weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask	[weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_pixHeight, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::getRandomY(int):double, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_minY, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_maxY, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::setMinMaxY(double, double):void, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::java.util.Random m_random, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_pixWidth, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::getRandomX(int):double, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_minX, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_maxX, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::setMinMaxX(double, double):void]
weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask	[weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_pixHeight, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::getRandomY(int):double, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_minY, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_maxY, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::setMinMaxY(double, double):void, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::java.util.Random m_random]
weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask	[weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_minY, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_maxY, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::setMinMaxY(double, double):void]
weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask	[weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_minX, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_maxX, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::setMinMaxX(double, double):void]
weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask	[weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_pixWidth, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::getRandomX(int):double, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_minX, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::double m_maxX, weka.gui.boundaryvisualizer.RemoteBoundaryVisualizerSubTask::setMinMaxX(double, double):void]
weka.core.Debug.Clock	[weka.core.Debug.Clock::long m_ThreadID, weka.core.Debug.Clock::getCurrentTime():long, weka.core.Debug.Clock::boolean m_CanMeasureCpuTime, weka.core.Debug.Clock::java.lang.management.ThreadMXBean m_ThreadMonitor, weka.core.Debug.Clock::init():void, weka.core.Debug.Clock::getThreadMonitor():java.lang.management.ThreadMXBean, weka.core.Debug.Clock::boolean m_UseCpuTime, weka.core.Debug.Clock::isCpuTime():boolean]
weka.core.Debug.Clock	[weka.core.Debug.Clock::long m_Stop, weka.core.Debug.Clock::boolean m_Running, weka.core.Debug.Clock::setUseCpuTime(boolean):void, weka.core.Debug.Clock::long m_ThreadID, weka.core.Debug.Clock::getCurrentTime():long, weka.core.Debug.Clock::boolean m_CanMeasureCpuTime, weka.core.Debug.Clock::java.lang.management.ThreadMXBean m_ThreadMonitor, weka.core.Debug.Clock::init():void, weka.core.Debug.Clock::getThreadMonitor():java.lang.management.ThreadMXBean, weka.core.Debug.Clock::boolean m_UseCpuTime, weka.core.Debug.Clock::isCpuTime():boolean, weka.core.Debug.Clock::start():void, weka.core.Debug.Clock::stop():void, weka.core.Debug.Clock::getStop():long]
weka.core.Debug.Clock	[weka.core.Debug.Clock::long m_ThreadID, weka.core.Debug.Clock::getCurrentTime():long, weka.core.Debug.Clock::boolean m_CanMeasureCpuTime, weka.core.Debug.Clock::java.lang.management.ThreadMXBean m_ThreadMonitor, weka.core.Debug.Clock::init():void, weka.core.Debug.Clock::getThreadMonitor():java.lang.management.ThreadMXBean]
weka.core.Debug.Clock	[weka.core.Debug.Clock::boolean m_CanMeasureCpuTime, weka.core.Debug.Clock::java.lang.management.ThreadMXBean m_ThreadMonitor, weka.core.Debug.Clock::init():void, weka.core.Debug.Clock::getThreadMonitor():java.lang.management.ThreadMXBean]
weka.core.matrix.SingularValueDecomposition	[weka.core.matrix.SingularValueDecomposition::double[][] U, weka.core.matrix.SingularValueDecomposition::getU():weka.core.matrix.Matrix, weka.core.matrix.SingularValueDecomposition::double[] s, weka.core.matrix.SingularValueDecomposition::norm2():double, weka.core.matrix.SingularValueDecomposition::int m, weka.core.matrix.SingularValueDecomposition::int n]
weka.core.matrix.SingularValueDecomposition	[weka.core.matrix.SingularValueDecomposition::double[][] U, weka.core.matrix.SingularValueDecomposition::getU():weka.core.matrix.Matrix, weka.core.matrix.SingularValueDecomposition::double[] s, weka.core.matrix.SingularValueDecomposition::norm2():double, weka.core.matrix.SingularValueDecomposition::int m, weka.core.matrix.SingularValueDecomposition::int n, weka.core.matrix.SingularValueDecomposition::cond():double, weka.core.matrix.SingularValueDecomposition::rank():int, weka.core.matrix.SingularValueDecomposition::getS():weka.core.matrix.Matrix]
weka.gui.visualize.PrintableComponent	[weka.gui.visualize.PrintableComponent::javax.swing.JComponent m_Component, weka.gui.visualize.PrintableComponent::getToolTipText(weka.gui.visualize.PrintableComponent):java.lang.String, weka.gui.visualize.PrintableComponent::double m_AspectRatio, weka.gui.visualize.PrintableComponent::updateDimensions(javax.swing.JTextField):void, weka.gui.visualize.PrintableComponent::boolean m_IgnoreChange, weka.gui.visualize.PrintableComponent::initFileChooser():void]
weka.gui.visualize.PrintableComponent	[weka.gui.visualize.PrintableComponent::double m_AspectRatio, weka.gui.visualize.PrintableComponent::updateDimensions(javax.swing.JTextField):void, weka.gui.visualize.PrintableComponent::boolean m_IgnoreChange, weka.gui.visualize.PrintableComponent::initFileChooser():void]
weka.classifiers.lazy.LWL	[weka.classifiers.lazy.LWL::int m_kNN, weka.classifiers.lazy.LWL::boolean m_UseAllK, weka.classifiers.lazy.LWL::int m_WeightKernel, weka.classifiers.lazy.LWL::setWeightingKernel(int):void, weka.classifiers.lazy.LWL::setKNN(int):void]
weka.clusterers.FarthestFirst	[weka.clusterers.FarthestFirst::double[] m_Min, weka.clusterers.FarthestFirst::double[] m_Max, weka.clusterers.FarthestFirst::norm(double, int):double, weka.clusterers.FarthestFirst::initMinMax(weka.core.Instances):void, weka.clusterers.FarthestFirst::updateMinMax(weka.core.Instance):void]
weka.clusterers.FarthestFirst	[weka.clusterers.FarthestFirst::weka.core.Instances m_instances, weka.clusterers.FarthestFirst::distance(weka.core.Instance, weka.core.Instance):double, weka.clusterers.FarthestFirst::difference(int, double, double):double]
weka.core.neighboursearch.NearestNeighbourSearch.MyHeap	[weka.core.neighboursearch.NearestNeighbourSearch.MyHeap::weka.core.neighboursearch.NearestNeighbourSearch.MyHeapElement[] m_heap, weka.core.neighboursearch.NearestNeighbourSearch.MyHeap::size():int, weka.core.neighboursearch.NearestNeighbourSearch.MyHeap::get():weka.core.neighboursearch.NearestNeighbourSearch.MyHeapElement, weka.core.neighboursearch.NearestNeighbourSearch.MyHeap::downheap():void, weka.core.neighboursearch.NearestNeighbourSearch.MyHeap::put(int, double):void, weka.core.neighboursearch.NearestNeighbourSearch.MyHeap::upheap():void]
weka.experiment.ResultMatrix	[weka.experiment.ResultMatrix::int m_MeanWidth, weka.experiment.ResultMatrix::int m_StdDevWidth, weka.experiment.ResultMatrix::int m_SignificanceWidth, weka.experiment.ResultMatrix::setMeanWidth(int):void, weka.experiment.ResultMatrix::setStdDevWidth(int):void, weka.experiment.ResultMatrix::setSignificanceWidth(int):void]
weka.experiment.ResultMatrix	[weka.experiment.ResultMatrix::boolean[] m_RowHidden, weka.experiment.ResultMatrix::getVisibleRowCount():int, weka.experiment.ResultMatrix::getRowHidden(int):boolean, weka.experiment.ResultMatrix::setRowHidden(int, boolean):void]
weka.experiment.ResultMatrix	[weka.experiment.ResultMatrix::boolean[] m_ColHidden, weka.experiment.ResultMatrix::getVisibleColCount():int, weka.experiment.ResultMatrix::getColHidden(int):boolean, weka.experiment.ResultMatrix::setColHidden(int, boolean):void]
weka.experiment.ResultMatrix	[weka.experiment.ResultMatrix::boolean[] m_RowHidden, weka.experiment.ResultMatrix::getVisibleRowCount():int, weka.experiment.ResultMatrix::getRowHidden(int):boolean, weka.experiment.ResultMatrix::setRowHidden(int, boolean):void, weka.experiment.ResultMatrix::setMean(int, int, double):void, weka.experiment.ResultMatrix::getMean(int, int):double, weka.experiment.ResultMatrix::getAverage(int):double, weka.experiment.ResultMatrix::getSignificanceCount(int, int):int, weka.experiment.ResultMatrix::setSignificance(int, int, int):void, weka.experiment.ResultMatrix::getSignificance(int, int):int, weka.experiment.ResultMatrix::setStdDev(int, int, double):void, weka.experiment.ResultMatrix::getStdDev(int, int):double, weka.experiment.ResultMatrix::int[][] m_Significance, weka.experiment.ResultMatrix::double[][] m_Mean, weka.experiment.ResultMatrix::double[][] m_StdDev]
weka.filters.supervised.attribute.ClassOrder	[weka.filters.supervised.attribute.ClassOrder::int[] m_Converter, weka.filters.supervised.attribute.ClassOrder::weka.core.Attribute m_ClassAttribute, weka.filters.supervised.attribute.ClassOrder::double[] m_ClassCounts, weka.filters.supervised.attribute.ClassOrder::getClassCounts():double[], weka.filters.supervised.attribute.ClassOrder::distributionsByOriginalIndex(double[]):double[], weka.filters.supervised.attribute.ClassOrder::originalValue(double):double]
weka.filters.unsupervised.attribute.RandomProjection	[weka.filters.unsupervised.attribute.RandomProjection::double[][] m_rmatrix, weka.filters.unsupervised.attribute.RandomProjection::computeRandomProjection(int, int, weka.core.Instance):double, weka.filters.unsupervised.attribute.RandomProjection::java.util.Random m_random, weka.filters.unsupervised.attribute.RandomProjection::weightedDistribution(int[]):int, weka.filters.unsupervised.attribute.RandomProjection::rndmNum(boolean):double]
weka.filters.unsupervised.attribute.RandomProjection	[weka.filters.unsupervised.attribute.RandomProjection::java.util.Random m_random, weka.filters.unsupervised.attribute.RandomProjection::weightedDistribution(int[]):int, weka.filters.unsupervised.attribute.RandomProjection::rndmNum(boolean):double]
weka.filters.unsupervised.attribute.RandomProjection	[weka.filters.unsupervised.attribute.RandomProjection::double m_percent, weka.filters.unsupervised.attribute.RandomProjection::setPercent(double):void, weka.filters.unsupervised.attribute.RandomProjection::getPercent():double]
weka.filters.unsupervised.attribute.RandomProjection	[weka.filters.unsupervised.attribute.RandomProjection::int m_distribution, weka.filters.unsupervised.attribute.RandomProjection::getDistribution():weka.core.SelectedTag, weka.filters.unsupervised.attribute.RandomProjection::setDistribution(weka.core.SelectedTag):void]
weka.gui.beans.CostBenefitAnalysis.AnalysisPanel	[weka.gui.beans.CostBenefitAnalysis.AnalysisPanel::weka.core.Attribute m_classAttribute, weka.gui.beans.CostBenefitAnalysis.AnalysisPanel::javax.swing.JLabel m_conf_actualA, weka.gui.beans.CostBenefitAnalysis.AnalysisPanel::javax.swing.JLabel m_conf_actualB, weka.gui.beans.CostBenefitAnalysis.AnalysisPanel::setClassForConfusionMatrix(weka.core.Attribute):void]
weka.gui.hierarchyvisualizer.HierarchyVisualizer	[weka.gui.hierarchyvisualizer.HierarchyVisualizer::double m_fTmpLength, weka.gui.hierarchyvisualizer.HierarchyVisualizer::parseNewick2(java.lang.String):weka.gui.hierarchyvisualizer.HierarchyVisualizer.Node, weka.gui.hierarchyvisualizer.HierarchyVisualizer::nextNode(java.lang.String, int):int]
weka.gui.scripting.SyntaxDocument	[weka.gui.scripting.SyntaxDocument::java.util.HashMap<java.lang.String,javax.swing.text.MutableAttributeSet> m_Keywords, weka.gui.scripting.SyntaxDocument::boolean m_CaseSensitive, weka.gui.scripting.SyntaxDocument::addKeyword(java.lang.String, javax.swing.text.MutableAttributeSet):void, weka.gui.scripting.SyntaxDocument::getKeywordFormatting(java.lang.String):javax.swing.text.MutableAttributeSet, weka.gui.scripting.SyntaxDocument::removeKeyword(java.lang.String):void, weka.gui.scripting.SyntaxDocument::addKeywords(java.lang.String[], javax.swing.text.MutableAttributeSet):void]
weka.gui.scripting.SyntaxDocument	[weka.gui.scripting.SyntaxDocument::java.lang.String m_Delimiters, weka.gui.scripting.SyntaxDocument::isDelimiter(java.lang.String):boolean, weka.gui.scripting.SyntaxDocument::java.lang.String m_QuoteDelimiters, weka.gui.scripting.SyntaxDocument::isQuoteDelimiter(java.lang.String):boolean]
weka.gui.scripting.SyntaxDocument	[weka.gui.scripting.SyntaxDocument::java.lang.String m_Indentation, weka.gui.scripting.SyntaxDocument::setIndentationSize(int):void, weka.gui.scripting.SyntaxDocument::getIndentationSize():int]
weka.gui.scripting.SyntaxDocument	[weka.gui.scripting.SyntaxDocument::javax.swing.text.DefaultStyledDocument m_Self, weka.gui.scripting.SyntaxDocument::javax.swing.text.Element m_RootElement, weka.gui.scripting.SyntaxDocument::processChangedLines(int, int):void, weka.gui.scripting.SyntaxDocument::boolean m_MultiLineComment, weka.gui.scripting.SyntaxDocument::java.lang.String m_MultiLineCommentStart, weka.gui.scripting.SyntaxDocument::java.lang.String m_MultiLineCommentEnd, weka.gui.scripting.SyntaxDocument::commentLinesBefore(java.lang.String, int):boolean, weka.gui.scripting.SyntaxDocument::commentLinesAfter(java.lang.String, int):void, weka.gui.scripting.SyntaxDocument::highlightLinesAfter(java.lang.String, int):void, weka.gui.scripting.SyntaxDocument::boolean m_InsideMultiLineComment, weka.gui.scripting.SyntaxDocument::applyHighlighting(java.lang.String, int):void, weka.gui.scripting.SyntaxDocument::startingMultiLineComment(java.lang.String, int, int):boolean, weka.gui.scripting.SyntaxDocument::endingMultiLineComment(java.lang.String, int, int):boolean, weka.gui.scripting.SyntaxDocument::indexOf(java.lang.String, java.lang.String, int):int, weka.gui.scripting.SyntaxDocument::lastIndexOf(java.lang.String, java.lang.String, int):int, weka.gui.scripting.SyntaxDocument::getLine(java.lang.String, int):java.lang.String, weka.gui.scripting.SyntaxDocument::java.lang.String m_QuoteEscape, weka.gui.scripting.SyntaxDocument::escapeQuote(java.lang.String):java.lang.String, weka.gui.scripting.SyntaxDocument::getQuoteToken(java.lang.String, int, int):int, weka.gui.scripting.SyntaxDocument::java.lang.String m_Delimiters, weka.gui.scripting.SyntaxDocument::isDelimiter(java.lang.String):boolean, weka.gui.scripting.SyntaxDocument::java.lang.String m_QuoteDelimiters, weka.gui.scripting.SyntaxDocument::isQuoteDelimiter(java.lang.String):boolean, weka.gui.scripting.SyntaxDocument::java.lang.String m_SingleLineCommentStart]
weka.gui.scripting.SyntaxDocument	[weka.gui.scripting.SyntaxDocument::java.lang.String m_QuoteEscape, weka.gui.scripting.SyntaxDocument::escapeQuote(java.lang.String):java.lang.String, weka.gui.scripting.SyntaxDocument::getQuoteToken(java.lang.String, int, int):int]
weka.gui.scripting.SyntaxDocument	[weka.gui.scripting.SyntaxDocument::javax.swing.text.DefaultStyledDocument m_Self, weka.gui.scripting.SyntaxDocument::javax.swing.text.Element m_RootElement, weka.gui.scripting.SyntaxDocument::processChangedLines(int, int):void, weka.gui.scripting.SyntaxDocument::boolean m_MultiLineComment, weka.gui.scripting.SyntaxDocument::java.lang.String m_MultiLineCommentStart, weka.gui.scripting.SyntaxDocument::java.lang.String m_MultiLineCommentEnd, weka.gui.scripting.SyntaxDocument::commentLinesBefore(java.lang.String, int):boolean, weka.gui.scripting.SyntaxDocument::commentLinesAfter(java.lang.String, int):void, weka.gui.scripting.SyntaxDocument::highlightLinesAfter(java.lang.String, int):void, weka.gui.scripting.SyntaxDocument::boolean m_InsideMultiLineComment, weka.gui.scripting.SyntaxDocument::applyHighlighting(java.lang.String, int):void, weka.gui.scripting.SyntaxDocument::startingMultiLineComment(java.lang.String, int, int):boolean, weka.gui.scripting.SyntaxDocument::endingMultiLineComment(java.lang.String, int, int):boolean, weka.gui.scripting.SyntaxDocument::indexOf(java.lang.String, java.lang.String, int):int, weka.gui.scripting.SyntaxDocument::lastIndexOf(java.lang.String, java.lang.String, int):int, weka.gui.scripting.SyntaxDocument::getLine(java.lang.String, int):java.lang.String, weka.gui.scripting.SyntaxDocument::java.lang.String m_QuoteEscape, weka.gui.scripting.SyntaxDocument::escapeQuote(java.lang.String):java.lang.String, weka.gui.scripting.SyntaxDocument::getQuoteToken(java.lang.String, int, int):int]
weka.gui.scripting.SyntaxDocument	[weka.gui.scripting.SyntaxDocument::javax.swing.text.DefaultStyledDocument m_Self, weka.gui.scripting.SyntaxDocument::javax.swing.text.Element m_RootElement, weka.gui.scripting.SyntaxDocument::processChangedLines(int, int):void, weka.gui.scripting.SyntaxDocument::boolean m_MultiLineComment, weka.gui.scripting.SyntaxDocument::java.lang.String m_MultiLineCommentStart, weka.gui.scripting.SyntaxDocument::java.lang.String m_MultiLineCommentEnd, weka.gui.scripting.SyntaxDocument::commentLinesBefore(java.lang.String, int):boolean, weka.gui.scripting.SyntaxDocument::commentLinesAfter(java.lang.String, int):void, weka.gui.scripting.SyntaxDocument::highlightLinesAfter(java.lang.String, int):void, weka.gui.scripting.SyntaxDocument::boolean m_InsideMultiLineComment, weka.gui.scripting.SyntaxDocument::applyHighlighting(java.lang.String, int):void, weka.gui.scripting.SyntaxDocument::startingMultiLineComment(java.lang.String, int, int):boolean, weka.gui.scripting.SyntaxDocument::endingMultiLineComment(java.lang.String, int, int):boolean, weka.gui.scripting.SyntaxDocument::indexOf(java.lang.String, java.lang.String, int):int, weka.gui.scripting.SyntaxDocument::lastIndexOf(java.lang.String, java.lang.String, int):int, weka.gui.scripting.SyntaxDocument::getLine(java.lang.String, int):java.lang.String]
weka.gui.treevisualizer.Edge	[weka.gui.treevisualizer.Edge::java.lang.String m_label, weka.gui.treevisualizer.Edge::breakupLabel():void, weka.gui.treevisualizer.Edge::java.util.Vector m_lines, weka.gui.treevisualizer.Edge::getLine(int):java.lang.String, weka.gui.treevisualizer.Edge::stringSize(java.awt.FontMetrics):java.awt.Dimension]
weka.gui.treevisualizer.Node	[weka.gui.treevisualizer.Node::java.lang.String m_label, weka.gui.treevisualizer.Node::breakupLabel():void, weka.gui.treevisualizer.Node::java.util.Vector m_lines, weka.gui.treevisualizer.Node::getLine(int):java.lang.String, weka.gui.treevisualizer.Node::stringSize(java.awt.FontMetrics):java.awt.Dimension]
weka.gui.treevisualizer.Node	[weka.gui.treevisualizer.Node::childVis(weka.gui.treevisualizer.Node):void, weka.gui.treevisualizer.Node::childInv(weka.gui.treevisualizer.Node):void, weka.gui.treevisualizer.Node::getGCount(weka.gui.treevisualizer.Node, int):int, weka.gui.treevisualizer.Node::getCount(weka.gui.treevisualizer.Node, int):int, weka.gui.treevisualizer.Node::getHeight(weka.gui.treevisualizer.Node, int):int]
weka.gui.treevisualizer.Node	[weka.gui.treevisualizer.Node::java.lang.String m_data, weka.gui.treevisualizer.Node::getInstances():weka.core.Instances, weka.gui.treevisualizer.Node::weka.core.Instances m_theData]
weka.attributeSelection.AttributeSelection	[weka.attributeSelection.AttributeSelection::weka.attributeSelection.AttributeTransformer m_transformer, weka.attributeSelection.AttributeSelection::weka.filters.unsupervised.attribute.Remove m_attributeFilter, weka.attributeSelection.AttributeSelection::reduceDimensionality(weka.core.Instances):weka.core.Instances, weka.attributeSelection.AttributeSelection::reduceDimensionality(weka.core.Instance):weka.core.Instance]
weka.attributeSelection.AttributeSelection	[weka.attributeSelection.AttributeSelection::int[] m_selectedAttributeSet, weka.attributeSelection.AttributeSelection::selectedAttributes():int[], weka.attributeSelection.AttributeSelection::numberAttributesSelected():int]
weka.attributeSelection.AttributeSelection	[weka.attributeSelection.AttributeSelection::weka.core.Instances m_trainInstances, weka.attributeSelection.AttributeSelection::weka.attributeSelection.ASSearch m_searchMethod, weka.attributeSelection.AttributeSelection::boolean m_doRank, weka.attributeSelection.AttributeSelection::weka.attributeSelection.ASEvaluation m_ASEvaluator, weka.attributeSelection.AttributeSelection::int m_numFolds, weka.attributeSelection.AttributeSelection::int m_seed, weka.attributeSelection.AttributeSelection::double[][] m_rankResults, weka.attributeSelection.AttributeSelection::double[] m_subsetResults, weka.attributeSelection.AttributeSelection::boolean m_doXval, weka.attributeSelection.AttributeSelection::setSearch(weka.attributeSelection.ASSearch):void, weka.attributeSelection.AttributeSelection::CVResultsString():java.lang.String, weka.attributeSelection.AttributeSelection::printSelectionResults():java.lang.String, weka.attributeSelection.AttributeSelection::CrossValidateAttributes():java.lang.String, weka.attributeSelection.AttributeSelection::selectAttributesCVSplit(weka.core.Instances):void, weka.attributeSelection.AttributeSelection::SelectAttributes(weka.core.Instances):void, weka.attributeSelection.AttributeSelection::int m_trials, weka.attributeSelection.AttributeSelection::SelectAttributes(weka.attributeSelection.ASEvaluation, java.lang.String[], weka.core.Instances):java.lang.String, weka.attributeSelection.AttributeSelection::java.lang.StringBuffer m_selectionResults, weka.attributeSelection.AttributeSelection::toResultsString():java.lang.String, weka.attributeSelection.AttributeSelection::int m_numToSelect, weka.attributeSelection.AttributeSelection::int[] m_selectedAttributeSet, weka.attributeSelection.AttributeSelection::selectedAttributes():int[], weka.attributeSelection.AttributeSelection::numberAttributesSelected():int, weka.attributeSelection.AttributeSelection::double[][] m_attributeRanking, weka.attributeSelection.AttributeSelection::rankedAttributes():double[][]]
weka.attributeSelection.ReliefFAttributeEval	[weka.attributeSelection.ReliefFAttributeEval::double[] m_maxArray, weka.attributeSelection.ReliefFAttributeEval::double[] m_minArray, weka.attributeSelection.ReliefFAttributeEval::norm(double, int):double]
weka.classifiers.bayes.net.BIFReader	[weka.classifiers.bayes.net.BIFReader::getContent(org.w3c.dom.Element):java.lang.String, weka.classifiers.bayes.net.BIFReader::getDefinition(org.w3c.dom.Document, java.lang.String):org.w3c.dom.Element, weka.classifiers.bayes.net.BIFReader::getTable(org.w3c.dom.Node):java.lang.String, weka.classifiers.bayes.net.BIFReader::getParentNodes(org.w3c.dom.Node):weka.core.FastVector, weka.classifiers.bayes.net.BIFReader::selectOutCome(org.w3c.dom.Node):weka.core.FastVector, weka.classifiers.bayes.net.BIFReader::selectName(org.w3c.dom.Node):weka.core.FastVector, weka.classifiers.bayes.net.BIFReader::selectProperty(org.w3c.dom.Node):weka.core.FastVector, weka.classifiers.bayes.net.BIFReader::selectElements(org.w3c.dom.Node, java.lang.String):weka.core.FastVector]
weka.classifiers.bayes.net.BIFReader	[weka.classifiers.bayes.net.BIFReader::getParentNodes(org.w3c.dom.Node):weka.core.FastVector, weka.classifiers.bayes.net.BIFReader::selectOutCome(org.w3c.dom.Node):weka.core.FastVector, weka.classifiers.bayes.net.BIFReader::selectName(org.w3c.dom.Node):weka.core.FastVector, weka.classifiers.bayes.net.BIFReader::selectProperty(org.w3c.dom.Node):weka.core.FastVector, weka.classifiers.bayes.net.BIFReader::selectElements(org.w3c.dom.Node, java.lang.String):weka.core.FastVector]
weka.classifiers.bayes.net.EditableBayesNet	[weka.classifiers.bayes.net.EditableBayesNet::selectElements(org.w3c.dom.Node, java.lang.String):weka.core.FastVector, weka.classifiers.bayes.net.EditableBayesNet::getContent(org.w3c.dom.Element):java.lang.String, weka.classifiers.bayes.net.EditableBayesNet::getDefinition(org.w3c.dom.Document, java.lang.String):org.w3c.dom.Element]
weka.classifiers.bayes.net.EditableBayesNet	[weka.classifiers.bayes.net.EditableBayesNet::weka.core.FastVector m_undoStack, weka.classifiers.bayes.net.EditableBayesNet::int m_nCurrentEditAction, weka.classifiers.bayes.net.EditableBayesNet::int m_nSavedPointer, weka.classifiers.bayes.net.EditableBayesNet::canRedo():boolean, weka.classifiers.bayes.net.EditableBayesNet::addUndoAction(weka.classifiers.bayes.net.EditableBayesNet.UndoAction):void, weka.classifiers.bayes.net.EditableBayesNet::clearUndoStack():void, weka.classifiers.bayes.net.EditableBayesNet::isChanged():boolean, weka.classifiers.bayes.net.EditableBayesNet::isSaved():void, weka.classifiers.bayes.net.EditableBayesNet::undo():java.lang.String, weka.classifiers.bayes.net.EditableBayesNet::redo():java.lang.String, weka.classifiers.bayes.net.EditableBayesNet::canUndo():boolean]
weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm	[weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm::double m_fAlpha, weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm::calcScoreOfCounts(int[], int, int, weka.core.Instances):double, weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm::calcScoreOfCounts2(int[][], int, int, weka.core.Instances):double, weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm::int m_nScoreType, weka.classifiers.bayes.net.search.local.LocalScoreSearchAlgorithm::getScoreType():weka.core.SelectedTag]
weka.classifiers.evaluation.EvaluationUtils	[weka.classifiers.evaluation.EvaluationUtils::getTrainTestPredictions(weka.classifiers.Classifier, weka.core.Instances, weka.core.Instances):weka.core.FastVector, weka.classifiers.evaluation.EvaluationUtils::getTestPredictions(weka.classifiers.Classifier, weka.core.Instances):weka.core.FastVector, weka.classifiers.evaluation.EvaluationUtils::getPrediction(weka.classifiers.Classifier, weka.core.Instance):weka.classifiers.evaluation.Prediction]
weka.classifiers.evaluation.NumericPrediction	[weka.classifiers.evaluation.NumericPrediction::double m_Actual, weka.classifiers.evaluation.NumericPrediction::double m_Predicted, weka.classifiers.evaluation.NumericPrediction::error():double]
weka.classifiers.meta.CostSensitiveClassifier	[weka.classifiers.meta.CostSensitiveClassifier::int m_MatrixSource, weka.classifiers.meta.CostSensitiveClassifier::java.io.File m_OnDemandDirectory, weka.classifiers.meta.CostSensitiveClassifier::setOnDemandDirectory(java.io.File):void]
weka.classifiers.misc.InputMappedClassifier	[weka.classifiers.misc.InputMappedClassifier::boolean m_trim, weka.classifiers.misc.InputMappedClassifier::boolean m_ignoreCase, weka.classifiers.misc.InputMappedClassifier::stringMatch(java.lang.String, java.lang.String):boolean]
weka.classifiers.pmml.consumer.GeneralRegression	[weka.classifiers.pmml.consumer.GeneralRegression::java.util.ArrayList<weka.classifiers.pmml.consumer.GeneralRegression.Predictor> m_factorList, weka.classifiers.pmml.consumer.GeneralRegression::getFactor(java.lang.String):weka.classifiers.pmml.consumer.GeneralRegression.Predictor, weka.classifiers.pmml.consumer.GeneralRegression::java.util.ArrayList<weka.classifiers.pmml.consumer.GeneralRegression.Predictor> m_covariateList, weka.classifiers.pmml.consumer.GeneralRegression::getCovariate(java.lang.String):weka.classifiers.pmml.consumer.GeneralRegression.Predictor]
weka.core.CheckOptionHandler	[weka.core.CheckOptionHandler::java.lang.String[] m_UserOptions, weka.core.CheckOptionHandler::setUserOptions(java.lang.String[]):void, weka.core.CheckOptionHandler::getCopy(java.lang.String[]):java.lang.String[]]
weka.core.Debug	[weka.core.Debug::boolean m_Enabled, weka.core.Debug::log(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String):void, weka.core.Debug::weka.core.Debug.Log m_Log]
weka.core.Memory	[weka.core.Memory::long m_Total, weka.core.Memory::java.lang.Runtime m_Runtime, weka.core.Memory::getCurrent():long]
weka.core.TechnicalInformation	[weka.core.TechnicalInformation::java.util.Vector<weka.core.TechnicalInformation> m_Additional, weka.core.TechnicalInformation::hasAdditional():boolean, weka.core.TechnicalInformation::additional():java.util.Enumeration<weka.core.TechnicalInformation>, weka.core.TechnicalInformation::add(weka.core.TechnicalInformation):void, weka.core.TechnicalInformation::add(weka.core.TechnicalInformation.Type):weka.core.TechnicalInformation]
weka.core.TechnicalInformation	[weka.core.TechnicalInformation::java.util.Hashtable<weka.core.TechnicalInformation.Field,java.lang.String> m_Values, weka.core.TechnicalInformation::setValue(weka.core.TechnicalInformation.Field, java.lang.String):void, weka.core.TechnicalInformation::getValue(weka.core.TechnicalInformation.Field):java.lang.String, weka.core.TechnicalInformation::exists(weka.core.TechnicalInformation.Field):boolean, weka.core.TechnicalInformation::fields():java.util.Enumeration<weka.core.TechnicalInformation.Field>]
weka.core.converters.DatabaseLoader	[weka.core.converters.DatabaseLoader::java.util.Hashtable<java.lang.String,java.lang.Double>[] m_nominalIndexes, weka.core.converters.DatabaseLoader::java.util.ArrayList<java.lang.String>[] m_nominalStrings, weka.core.converters.DatabaseLoader::stringToNominal(java.sql.ResultSet, int):void]
weka.core.matrix.CholeskyDecomposition	[weka.core.matrix.CholeskyDecomposition::double[][] L, weka.core.matrix.CholeskyDecomposition::int n, weka.core.matrix.CholeskyDecomposition::getL():weka.core.matrix.Matrix]
weka.core.matrix.FloatingPointFormat	[weka.core.matrix.FloatingPointFormat::int width, weka.core.matrix.FloatingPointFormat::boolean trailing, weka.core.matrix.FloatingPointFormat::width():int]
weka.core.matrix.LUDecomposition	[weka.core.matrix.LUDecomposition::int m, weka.core.matrix.LUDecomposition::int[] piv, weka.core.matrix.LUDecomposition::getPivot():int[], weka.core.matrix.LUDecomposition::getDoublePivot():double[]]
weka.core.neighboursearch.CoverTree	[weka.core.neighboursearch.CoverTree::SWAP(int, int, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree.d_node>):void, weka.core.neighboursearch.CoverTree::compare(int, int, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree.d_node>):double, weka.core.neighboursearch.CoverTree::halfsort(weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree.d_node>):void]
weka.core.neighboursearch.PerformanceStats	[weka.core.neighboursearch.PerformanceStats::double m_PointCount, weka.core.neighboursearch.PerformanceStats::double m_CoordCount, weka.core.neighboursearch.PerformanceStats::incrCoordCount():void, weka.core.neighboursearch.PerformanceStats::searchStart():void]
weka.core.pmml.MiningSchema	[weka.core.pmml.MiningSchema::weka.core.Instances m_fieldInstancesStructure, weka.core.pmml.MiningSchema::weka.core.pmml.TargetMetaInfo m_targetMetaInfo, weka.core.pmml.MiningSchema::hasTargetMetaData():boolean, weka.core.pmml.MiningSchema::convertStringAttsToNominal():void, weka.core.pmml.MiningSchema::convertNumericAttToNominal(int, java.util.ArrayList<java.lang.String>):void]
weka.core.pmml.MiningSchema	[weka.core.pmml.MiningSchema::java.util.ArrayList<weka.core.pmml.MiningFieldMetaInfo> m_miningMeta, weka.core.pmml.MiningSchema::applyMissingValuesTreatment(double[]):void, weka.core.pmml.MiningSchema::applyMissingAndOutlierTreatments(double[]):void, weka.core.pmml.MiningSchema::applyOutlierTreatment(double[]):void]
weka.core.pmml.VectorInstance	[weka.core.pmml.VectorInstance::weka.core.pmml.Array m_values, weka.core.pmml.VectorInstance::java.util.List<weka.core.pmml.FieldRef> m_vectorFields, weka.core.pmml.VectorInstance::subtract(double[]):weka.core.pmml.VectorInstance, weka.core.pmml.VectorInstance::subtract(weka.core.pmml.VectorInstance):weka.core.pmml.VectorInstance]
weka.core.xml.PropertyHandler	[weka.core.xml.PropertyHandler::java.util.Hashtable<java.lang.Object,java.util.HashSet<java.lang.String>> m_Allowed, weka.core.xml.PropertyHandler::allowed():java.util.Enumeration, weka.core.xml.PropertyHandler::isAllowed(java.lang.Object, java.lang.String):boolean, weka.core.xml.PropertyHandler::addAllowed(java.lang.Class, java.lang.String):void, weka.core.xml.PropertyHandler::removeAllowed(java.lang.Class, java.lang.String):boolean, weka.core.xml.PropertyHandler::isAllowed(java.lang.Class, java.lang.String):boolean]
weka.core.xml.PropertyHandler	[weka.core.xml.PropertyHandler::java.util.Hashtable<java.lang.Object,java.util.HashSet<java.lang.String>> m_Ignored, weka.core.xml.PropertyHandler::ignored():java.util.Enumeration, weka.core.xml.PropertyHandler::isIgnored(java.lang.Object, java.lang.String):boolean, weka.core.xml.PropertyHandler::addIgnored(java.lang.String):void, weka.core.xml.PropertyHandler::addIgnored(java.lang.Class, java.lang.String):void, weka.core.xml.PropertyHandler::removeIgnored(java.lang.String):boolean, weka.core.xml.PropertyHandler::removeIgnored(java.lang.Class, java.lang.String):boolean, weka.core.xml.PropertyHandler::isIgnored(java.lang.String):boolean, weka.core.xml.PropertyHandler::isIgnored(java.lang.Class, java.lang.String):boolean]
weka.datagenerators.classifiers.regression.MexicanHat	[weka.datagenerators.classifiers.regression.MexicanHat::double m_MinRange, weka.datagenerators.classifiers.regression.MexicanHat::double m_MaxRange, weka.datagenerators.classifiers.regression.MexicanHat::setRange(java.lang.String):void, weka.datagenerators.classifiers.regression.MexicanHat::getRange():java.lang.String]
weka.datagenerators.clusterers.BIRCHCluster	[weka.datagenerators.clusterers.BIRCHCluster::double m_MinRadius, weka.datagenerators.clusterers.BIRCHCluster::double m_MaxRadius, weka.datagenerators.clusterers.BIRCHCluster::setRadiuses(java.lang.String):void, weka.datagenerators.clusterers.BIRCHCluster::getRadiuses():java.lang.String]
weka.datagenerators.clusterers.BIRCHCluster	[weka.datagenerators.clusterers.BIRCHCluster::int m_InputOrder, weka.datagenerators.clusterers.BIRCHCluster::getInputOrder():weka.core.SelectedTag, weka.datagenerators.clusterers.BIRCHCluster::getOrderedFlag():boolean]
weka.filters.Filter	[weka.filters.Filter::weka.core.StringLocator m_OutputStringAtts, weka.filters.Filter::weka.core.RelationalLocator m_OutputRelAtts, weka.filters.Filter::initOutputLocators(weka.core.Instances, int[]):void]
weka.filters.Filter	[weka.filters.Filter::weka.core.StringLocator m_InputStringAtts, weka.filters.Filter::weka.core.RelationalLocator m_InputRelAtts, weka.filters.Filter::initInputLocators(weka.core.Instances, int[]):void]
weka.filters.Filter	[weka.filters.Filter::weka.core.Queue m_OutputQueue, weka.filters.Filter::filterFile(weka.filters.Filter, java.lang.String[]):void, weka.filters.Filter::batchFilterFile(weka.filters.Filter, java.lang.String[]):void, weka.filters.Filter::useFilter(weka.core.Instances, weka.filters.Filter):weka.core.Instances, weka.filters.Filter::resetQueue():void]
weka.filters.supervised.instance.StratifiedRemoveFolds	[weka.filters.supervised.instance.StratifiedRemoveFolds::int m_NumFolds, weka.filters.supervised.instance.StratifiedRemoveFolds::int m_Fold, weka.filters.supervised.instance.StratifiedRemoveFolds::setNumFolds(int):void, weka.filters.supervised.instance.StratifiedRemoveFolds::setFold(int):void]
weka.filters.unsupervised.attribute.Add	[weka.filters.unsupervised.attribute.Add::java.lang.String m_Name, weka.filters.unsupervised.attribute.Add::setAttributeName(java.lang.String):void, weka.filters.unsupervised.attribute.Add::java.lang.String m_DateFormat, weka.filters.unsupervised.attribute.Add::setDateFormat(java.lang.String):void]
weka.filters.unsupervised.instance.RemoveFolds	[weka.filters.unsupervised.instance.RemoveFolds::int m_NumFolds, weka.filters.unsupervised.instance.RemoveFolds::int m_Fold, weka.filters.unsupervised.instance.RemoveFolds::setNumFolds(int):void, weka.filters.unsupervised.instance.RemoveFolds::setFold(int):void]
weka.gui.GenericObjectEditor.GOEPanel	[weka.gui.GenericObjectEditor.GOEPanel::javax.swing.JButton m_cancelBut, weka.gui.GenericObjectEditor.GOEPanel::setCancelButton(boolean):void, weka.gui.GenericObjectEditor.GOEPanel::addCancelListener(java.awt.event.ActionListener):void, weka.gui.GenericObjectEditor.GOEPanel::removeCancelListener(java.awt.event.ActionListener):void, weka.gui.GenericObjectEditor.GOEPanel::copyObject(java.lang.Object):java.lang.Object]
weka.gui.GenericObjectEditor.GOEPanel	[weka.gui.GenericObjectEditor.GOEPanel::javax.swing.JButton m_okBut, weka.gui.GenericObjectEditor.GOEPanel::setOkButtonText(java.lang.String):void, weka.gui.GenericObjectEditor.GOEPanel::addOkListener(java.awt.event.ActionListener):void, weka.gui.GenericObjectEditor.GOEPanel::removeOkListener(java.awt.event.ActionListener):void]
weka.gui.GenericObjectEditor.GOEPanel	[weka.gui.GenericObjectEditor.GOEPanel::javax.swing.JFileChooser m_FileChooser, weka.gui.GenericObjectEditor.GOEPanel::saveObject(java.lang.Object):void, weka.gui.GenericObjectEditor.GOEPanel::createFileChooser():void, weka.gui.GenericObjectEditor.GOEPanel::openObject():java.lang.Object]
weka.gui.GenericPropertiesCreator	[weka.gui.GenericPropertiesCreator::java.lang.String m_OutputFilename, weka.gui.GenericPropertiesCreator::storeOutputProperties():void, weka.gui.GenericPropertiesCreator::main(java.lang.String[]):void, weka.gui.GenericPropertiesCreator::java.util.Properties m_OutputProperties, weka.gui.GenericPropertiesCreator::regenerateGlobalOutputProperties():void]
weka.gui.GenericPropertiesCreator	[weka.gui.GenericPropertiesCreator::java.lang.String m_InputFilename, weka.gui.GenericPropertiesCreator::boolean m_ExplicitPropsFile, weka.gui.GenericPropertiesCreator::setInputFilename(java.lang.String):void, weka.gui.GenericPropertiesCreator::loadInputProperties():void, weka.gui.GenericPropertiesCreator::java.util.Properties m_InputProperties, weka.gui.GenericPropertiesCreator::useDynamic():boolean]
weka.gui.SetInstancesPanel	[weka.gui.SetInstancesPanel::javax.swing.JFrame m_ParentFrame, weka.gui.SetInstancesPanel::closeFrame():void, weka.gui.SetInstancesPanel::javax.swing.JPanel m_CloseButPanel, weka.gui.SetInstancesPanel::setParentFrame(javax.swing.JFrame):void]
weka.gui.SetInstancesPanel	[weka.gui.SetInstancesPanel::java.lang.String m_LastURL, weka.gui.SetInstancesPanel::setInstancesFromURLQ():void, weka.gui.SetInstancesPanel::java.lang.Thread m_IOThread]
weka.gui.SetInstancesPanel	[weka.gui.SetInstancesPanel::weka.gui.ConverterFileChooser m_FileChooser, weka.gui.SetInstancesPanel::setInstancesFromFileQ():void, weka.gui.SetInstancesPanel::java.lang.String m_LastURL, weka.gui.SetInstancesPanel::setInstancesFromURLQ():void, weka.gui.SetInstancesPanel::java.lang.Thread m_IOThread]
weka.gui.beans.FlowByExpressionCustomizer	[weka.gui.beans.FlowByExpressionCustomizer::javax.swing.JLabel m_expressionLab, weka.gui.beans.FlowByExpressionCustomizer::updateExpressionLabel():void, weka.gui.beans.FlowByExpressionCustomizer::javax.swing.tree.DefaultMutableTreeNode m_treeRoot]
weka.gui.boundaryvisualizer.KDDataGenerator	[weka.gui.boundaryvisualizer.KDDataGenerator::double[] m_Min, weka.gui.boundaryvisualizer.KDDataGenerator::double[] m_Max, weka.gui.boundaryvisualizer.KDDataGenerator::norm(double, int):double]
weka.gui.sql.ConnectionPanel	[weka.gui.sql.ConnectionPanel::java.lang.String m_URL, weka.gui.sql.ConnectionPanel::javax.swing.JTextField m_TextURL, weka.gui.sql.ConnectionPanel::setURL(java.lang.String):void, weka.gui.sql.ConnectionPanel::getURL():java.lang.String, weka.gui.sql.ConnectionPanel::setFocus():void]
weka.gui.sql.ConnectionPanel	[weka.gui.sql.ConnectionPanel::java.util.HashSet m_HistoryChangedListeners, weka.gui.sql.ConnectionPanel::removeHistoryChangedListener(weka.gui.sql.event.HistoryChangedListener):void, weka.gui.sql.ConnectionPanel::javax.swing.DefaultListModel m_History, weka.gui.sql.ConnectionPanel::addHistory(java.lang.String):void, weka.gui.sql.ConnectionPanel::setHistory(javax.swing.DefaultListModel):void, weka.gui.sql.ConnectionPanel::notifyHistoryChangedListeners():void]
weka.gui.visualize.Plot2D	[weka.gui.visualize.Plot2D::weka.core.FastVector m_colorList, weka.gui.visualize.Plot2D::java.awt.Color[] m_DefaultColors, weka.gui.visualize.Plot2D::extendColourMap(int):void]
weka.gui.visualize.Plot2D	[weka.gui.visualize.Plot2D::java.awt.Font m_labelFont, weka.gui.visualize.Plot2D::setFonts(java.awt.Graphics):void, weka.gui.visualize.Plot2D::java.awt.FontMetrics m_labelMetrics]
weka.associations.FPGrowth	[weka.associations.FPGrowth::weka.associations.DefaultAssociationRule.METRIC_TYPE m_metric, weka.associations.FPGrowth::getMetricType():weka.core.SelectedTag, weka.associations.FPGrowth::setMetricType(weka.core.SelectedTag):void]
weka.classifiers.BVDecompose	[weka.classifiers.BVDecompose::int m_ClassIndex, weka.classifiers.BVDecompose::getClassIndex():int, weka.classifiers.BVDecompose::setClassIndex(int):void]
weka.classifiers.BVDecomposeSegCVSub	[weka.classifiers.BVDecomposeSegCVSub::int m_ClassIndex, weka.classifiers.BVDecomposeSegCVSub::getClassIndex():int, weka.classifiers.BVDecomposeSegCVSub::setClassIndex(int):void]
weka.classifiers.functions.LinearRegression	[weka.classifiers.functions.LinearRegression::int m_AttributeSelection, weka.classifiers.functions.LinearRegression::getAttributeSelectionMethod():weka.core.SelectedTag, weka.classifiers.functions.LinearRegression::setAttributeSelectionMethod(weka.core.SelectedTag):void]
weka.classifiers.functions.LinearRegression	[weka.classifiers.functions.LinearRegression::boolean m_checksTurnedOff, weka.classifiers.functions.LinearRegression::turnChecksOff():void, weka.classifiers.functions.LinearRegression::turnChecksOn():void]
weka.classifiers.functions.SMOreg	[weka.classifiers.functions.SMOreg::int m_filterType, weka.classifiers.functions.SMOreg::getFilterType():weka.core.SelectedTag, weka.classifiers.functions.SMOreg::setFilterType(weka.core.SelectedTag):void]
weka.classifiers.functions.supportVector.KernelEvaluation	[weka.classifiers.functions.supportVector.KernelEvaluation::java.lang.String[] m_Options, weka.classifiers.functions.supportVector.KernelEvaluation::setUserOptions(java.lang.String[]):void, weka.classifiers.functions.supportVector.KernelEvaluation::getUserOptions():java.lang.String[], weka.classifiers.functions.supportVector.KernelEvaluation::evaluate(weka.classifiers.functions.supportVector.Kernel, java.lang.String[]):java.lang.String]
weka.classifiers.meta.Vote	[weka.classifiers.meta.Vote::java.util.List<java.lang.String> m_classifiersToLoad, weka.classifiers.meta.Vote::setPreBuiltClassifiers(java.io.File[]):void, weka.classifiers.meta.Vote::getPreBuiltClassifiers():java.io.File[]]
weka.core.CheckGOE	[weka.core.CheckGOE::java.util.HashSet<java.lang.String> m_IgnoredProperties, weka.core.CheckGOE::setIgnoredProperties(java.lang.String):void, weka.core.CheckGOE::getIgnoredProperties():java.lang.String]
weka.core.Debug.DBO	[weka.core.Debug.DBO::boolean m_verboseOn, weka.core.Debug.DBO::setVerboseOn():void, weka.core.Debug.DBO::dpln(java.lang.String):void, weka.core.Debug.DBO::dp(java.lang.String):void]
weka.core.converters.CSVLoader	[weka.core.converters.CSVLoader::java.lang.String m_FieldSeparator, weka.core.converters.CSVLoader::setFieldSeparator(java.lang.String):void, weka.core.converters.CSVLoader::getFieldSeparator():java.lang.String]
weka.core.converters.CSVSaver	[weka.core.converters.CSVSaver::java.lang.String m_FieldSeparator, weka.core.converters.CSVSaver::setFieldSeparator(java.lang.String):void, weka.core.converters.CSVSaver::getFieldSeparator():java.lang.String]
weka.core.json.JSONNode	[weka.core.json.JSONNode::weka.core.json.JSONNode.NodeType m_NodeType, weka.core.json.JSONNode::isPrimitive():boolean, weka.core.json.JSONNode::isArray():boolean, weka.core.json.JSONNode::isObject():boolean]
weka.core.json.JSONNode	[weka.core.json.JSONNode::weka.core.json.JSONNode.NodeType m_NodeType, weka.core.json.JSONNode::isPrimitive():boolean, weka.core.json.JSONNode::isArray():boolean, weka.core.json.JSONNode::isObject():boolean, weka.core.json.JSONNode::addArrayElement(java.lang.Object):weka.core.json.JSONNode, weka.core.json.JSONNode::main(java.lang.String[]):void, weka.core.json.JSONNode::add(java.lang.String, java.lang.Object, weka.core.json.JSONNode.NodeType):weka.core.json.JSONNode]
weka.core.json.JSONNode	[weka.core.json.JSONNode::java.lang.String m_Name, weka.core.json.JSONNode::isAnonymous():boolean, weka.core.json.JSONNode::getChild(java.lang.String):weka.core.json.JSONNode, weka.core.json.JSONNode::java.lang.Object m_Value, weka.core.json.JSONNode::getValue(java.lang.Object):java.lang.Object, weka.core.json.JSONNode::hasChild(java.lang.String):boolean]
weka.core.xml.XMLSerialization	[weka.core.xml.XMLSerialization::java.util.Hashtable<java.lang.Class,java.lang.String> m_ClassnameOverride, weka.core.xml.XMLSerialization::overrideClassname(java.lang.Object):java.lang.String, weka.core.xml.XMLSerialization::overrideClassname(java.lang.String):java.lang.String]
weka.datagenerators.clusterers.BIRCHCluster.Cluster	[weka.datagenerators.clusterers.BIRCHCluster.Cluster::double m_Radius, weka.datagenerators.clusterers.BIRCHCluster.Cluster::getVariance():double, weka.datagenerators.clusterers.BIRCHCluster.Cluster::getStdDev():double]
weka.experiment.DatabaseUtils	[weka.experiment.DatabaseUtils::java.util.HashSet<java.lang.String> m_Keywords, weka.experiment.DatabaseUtils::setKeywords(java.lang.String):void, weka.experiment.DatabaseUtils::getKeywords():java.lang.String, weka.experiment.DatabaseUtils::isKeyword(java.lang.String):boolean]
weka.experiment.OutputZipper	[weka.experiment.OutputZipper::java.io.DataOutputStream m_zipOut, weka.experiment.OutputZipper::finished():void, weka.experiment.OutputZipper::main(java.lang.String[]):void]
weka.experiment.OutputZipper	[weka.experiment.OutputZipper::java.io.File m_destination, weka.experiment.OutputZipper::zipit(java.lang.String, java.lang.String):void, weka.experiment.OutputZipper::java.util.zip.ZipOutputStream m_zs]
weka.experiment.PairedTTester.Resultset	[weka.experiment.PairedTTester.Resultset::weka.core.FastVector m_Datasets, weka.experiment.PairedTTester.Resultset::sort(int):void, weka.experiment.PairedTTester.Resultset::dataset(weka.core.Instance):weka.core.FastVector, weka.experiment.PairedTTester.Resultset::add(weka.core.Instance):void]
weka.filters.supervised.attribute.NominalToBinary	[weka.filters.supervised.attribute.NominalToBinary::boolean m_Numeric, weka.filters.supervised.attribute.NominalToBinary::getBinaryAttributesNominal():boolean, weka.filters.supervised.attribute.NominalToBinary::setBinaryAttributesNominal(boolean):void]
weka.filters.unsupervised.attribute.AddValues	[weka.filters.unsupervised.attribute.AddValues::java.util.Vector m_Labels, weka.filters.unsupervised.attribute.AddValues::getLabels():java.lang.String, weka.filters.unsupervised.attribute.AddValues::setLabels(java.lang.String):void]
weka.filters.unsupervised.attribute.NominalToBinary	[weka.filters.unsupervised.attribute.NominalToBinary::boolean m_Numeric, weka.filters.unsupervised.attribute.NominalToBinary::getBinaryAttributesNominal():boolean, weka.filters.unsupervised.attribute.NominalToBinary::setBinaryAttributesNominal(boolean):void]
weka.filters.unsupervised.attribute.RemoveType	[weka.filters.unsupervised.attribute.RemoveType::int m_attTypeToDelete, weka.filters.unsupervised.attribute.RemoveType::getAttributeType():weka.core.SelectedTag, weka.filters.unsupervised.attribute.RemoveType::getAttributeTypeString():java.lang.String, weka.filters.unsupervised.attribute.RemoveType::setAttributeTypeString(java.lang.String):void]
weka.filters.unsupervised.attribute.StringToWordVector	[weka.filters.unsupervised.attribute.StringToWordVector::int m_filterType, weka.filters.unsupervised.attribute.StringToWordVector::getNormalizeDocLength():weka.core.SelectedTag, weka.filters.unsupervised.attribute.StringToWordVector::setNormalizeDocLength(weka.core.SelectedTag):void]
weka.gui.AttributeSelectionPanel	[weka.gui.AttributeSelectionPanel::weka.gui.AttributeSelectionPanel.AttributeTableModel m_Model, weka.gui.AttributeSelectionPanel::getSelectedAttributes():int[], weka.gui.AttributeSelectionPanel::setSelectedAttributes(boolean[]):void]
weka.gui.AttributeSelectionPanel	[weka.gui.AttributeSelectionPanel::javax.swing.JTable m_Table, weka.gui.AttributeSelectionPanel::getPreferredScrollableViewportSize():java.awt.Dimension, weka.gui.AttributeSelectionPanel::setPreferredScrollableViewportSize(java.awt.Dimension):void, weka.gui.AttributeSelectionPanel::getSelectionModel():javax.swing.ListSelectionModel]
weka.gui.AttributeSelectionPanel	[weka.gui.AttributeSelectionPanel::javax.swing.JButton m_IncludeAll, weka.gui.AttributeSelectionPanel::javax.swing.JButton m_RemoveAll, weka.gui.AttributeSelectionPanel::javax.swing.JButton m_Invert, weka.gui.AttributeSelectionPanel::javax.swing.JButton m_Pattern, weka.gui.AttributeSelectionPanel::main(java.lang.String[]):void, weka.gui.AttributeSelectionPanel::setInstances(weka.core.Instances):void, weka.gui.AttributeSelectionPanel::javax.swing.JTable m_Table, weka.gui.AttributeSelectionPanel::getPreferredScrollableViewportSize():java.awt.Dimension, weka.gui.AttributeSelectionPanel::setPreferredScrollableViewportSize(java.awt.Dimension):void, weka.gui.AttributeSelectionPanel::getSelectionModel():javax.swing.ListSelectionModel]
weka.gui.AttributeSelectionPanel	[weka.gui.AttributeSelectionPanel::javax.swing.JButton m_IncludeAll, weka.gui.AttributeSelectionPanel::javax.swing.JButton m_RemoveAll, weka.gui.AttributeSelectionPanel::javax.swing.JButton m_Invert, weka.gui.AttributeSelectionPanel::javax.swing.JButton m_Pattern, weka.gui.AttributeSelectionPanel::main(java.lang.String[]):void, weka.gui.AttributeSelectionPanel::setInstances(weka.core.Instances):void]
weka.gui.ConverterFileChooser	[weka.gui.ConverterFileChooser::boolean m_CoreConvertersOnly, weka.gui.ConverterFileChooser::filterNonCoreLoaderFileFilters(java.util.Vector<weka.gui.ExtensionFileFilter>):java.util.Vector<weka.gui.ExtensionFileFilter>, weka.gui.ConverterFileChooser::filterNonCoreSaverFileFilters(java.util.Vector<weka.gui.ExtensionFileFilter>):java.util.Vector<weka.gui.ExtensionFileFilter>]
weka.gui.ConverterFileChooser	[weka.gui.ConverterFileChooser::weka.core.Capabilities m_CapabilitiesFilter, weka.gui.ConverterFileChooser::setCapabilitiesFilter(weka.core.Capabilities):void, weka.gui.ConverterFileChooser::getCapabilitiesFilter():weka.core.Capabilities, weka.gui.ConverterFileChooser::filterSaverFileFilters(java.util.Vector<weka.gui.ExtensionFileFilter>):java.util.Vector<weka.gui.ExtensionFileFilter>]
weka.gui.ConverterFileChooser	[weka.gui.ConverterFileChooser::java.lang.Object m_CurrentConverter, weka.gui.ConverterFileChooser::getLoader():weka.core.converters.AbstractFileLoader, weka.gui.ConverterFileChooser::getSaver():weka.core.converters.AbstractFileSaver, weka.gui.ConverterFileChooser::configureCurrentConverter(int):void]
weka.gui.HierarchyPropertyParser	[weka.gui.HierarchyPropertyParser::java.lang.String m_Seperator, weka.gui.HierarchyPropertyParser::tokenize(java.lang.String):java.lang.String[], weka.gui.HierarchyPropertyParser::isHierachic(java.lang.String):boolean]
weka.gui.PackageManager	[weka.gui.PackageManager::javax.swing.JSplitPane m_splitP, weka.gui.PackageManager::setInitialSplitPaneDividerLocation():void, weka.gui.PackageManager::main(java.lang.String[]):void]
weka.gui.PropertySheetPanel	[weka.gui.PropertySheetPanel::weka.gui.beans.GOECustomizer m_Customizer, weka.gui.PropertySheetPanel::closingOK():void, weka.gui.PropertySheetPanel::closingCancel():void]
weka.gui.PropertySheetPanel	[weka.gui.PropertySheetPanel::java.lang.StringBuffer m_HelpText, weka.gui.PropertySheetPanel::javax.swing.JButton m_HelpBut, weka.gui.PropertySheetPanel::javax.swing.JDialog m_HelpDialog, weka.gui.PropertySheetPanel::openHelpFrame():void]
weka.gui.ResultHistoryPanel	[weka.gui.ResultHistoryPanel::java.util.Hashtable m_Objs, weka.gui.ResultHistoryPanel::addObject(java.lang.String, java.lang.Object):void, weka.gui.ResultHistoryPanel::getNamedObject(java.lang.String):java.lang.Object]
weka.gui.ResultHistoryPanel	[weka.gui.ResultHistoryPanel::javax.swing.text.JTextComponent m_SingleText, weka.gui.ResultHistoryPanel::java.lang.String m_SingleName, weka.gui.ResultHistoryPanel::setSingle(java.lang.String):void, weka.gui.ResultHistoryPanel::updateResult(java.lang.String):void, weka.gui.ResultHistoryPanel::java.util.Hashtable m_FramedOutput, weka.gui.ResultHistoryPanel::openFrame(java.lang.String):void]
weka.gui.arffviewer.ArffPanel	[weka.gui.arffviewer.ArffPanel::java.util.HashSet m_ChangeListeners, weka.gui.arffviewer.ArffPanel::notifyListener():void, weka.gui.arffviewer.ArffPanel::removeChangeListener(javax.swing.event.ChangeListener):void]
weka.gui.beans.Note	[weka.gui.beans.Note::int m_fontSizeAdjust, weka.gui.beans.Note::decreaseFontSize():void, weka.gui.beans.Note::increaseFontSize():void]
weka.gui.beans.Note	[weka.gui.beans.Note::java.lang.String m_noteText, weka.gui.beans.Note::setNoteText(java.lang.String):void, weka.gui.beans.Note::javax.swing.JLabel m_label, weka.gui.beans.Note::convertToHTML(java.lang.String):java.lang.String]
weka.gui.experiment.DistributeExperimentPanel	[weka.gui.experiment.DistributeExperimentPanel::javax.swing.JCheckBox m_enableDistributedExperiment, weka.gui.experiment.DistributeExperimentPanel::distributedExperimentSelected():boolean, weka.gui.experiment.DistributeExperimentPanel::addCheckBoxActionListener(java.awt.event.ActionListener):void]
weka.gui.experiment.DistributeExperimentPanel	[weka.gui.experiment.DistributeExperimentPanel::weka.experiment.RemoteExperiment m_Exp, weka.gui.experiment.DistributeExperimentPanel::javax.swing.JRadioButton m_splitByDataSet, weka.gui.experiment.DistributeExperimentPanel::updateRadioLinks():void, weka.gui.experiment.DistributeExperimentPanel::setExperiment(weka.experiment.Experiment):void, weka.gui.experiment.DistributeExperimentPanel::javax.swing.JButton m_configureHostNames, weka.gui.experiment.DistributeExperimentPanel::javax.swing.JRadioButton m_splitByRun]
weka.gui.explorer.DataGeneratorPanel	[weka.gui.explorer.DataGeneratorPanel::weka.gui.GenericObjectEditor m_GeneratorEditor, weka.gui.explorer.DataGeneratorPanel::setGenerator(weka.datagenerators.DataGenerator):void, weka.gui.explorer.DataGeneratorPanel::getGenerator():weka.datagenerators.DataGenerator]
weka.gui.explorer.DataGeneratorPanel	[weka.gui.explorer.DataGeneratorPanel::weka.core.Instances m_Instances, weka.gui.explorer.DataGeneratorPanel::weka.gui.Logger m_Log, weka.gui.explorer.DataGeneratorPanel::java.io.StringWriter m_Output, weka.gui.explorer.DataGeneratorPanel::getOutput():java.lang.String, weka.gui.explorer.DataGeneratorPanel::execute():boolean]
weka.gui.scripting.Script	[weka.gui.scripting.Script::java.util.HashSet<weka.gui.scripting.event.ScriptExecutionListener> m_FinishedListeners, weka.gui.scripting.Script::removeScriptFinishedListener(weka.gui.scripting.event.ScriptExecutionListener):void, weka.gui.scripting.Script::notifyScriptFinishedListeners(weka.gui.scripting.event.ScriptExecutionEvent):void]
weka.gui.sql.ResultPanel	[weka.gui.sql.ResultPanel::java.util.HashSet m_Listeners, weka.gui.sql.ResultPanel::removeResultChangedListener(weka.gui.sql.event.ResultChangedListener):void, weka.gui.sql.ResultPanel::notifyListeners(java.lang.String, java.lang.String, java.lang.String, java.lang.String):void]
weka.gui.sql.ResultPanel	[weka.gui.sql.ResultPanel::javax.swing.JTabbedPane m_TabbedPane, weka.gui.sql.ResultPanel::close():void, weka.gui.sql.ResultPanel::closeAll():void, weka.gui.sql.ResultPanel::getCurrentTable():weka.gui.sql.ResultSetTable]
weka.gui.streams.InstanceLoader	[weka.gui.streams.InstanceLoader::javax.swing.JTextField m_FileNameTex, weka.gui.streams.InstanceLoader::setArffFile(java.lang.String):void, weka.gui.streams.InstanceLoader::getArffFile():java.lang.String]
weka.gui.streams.InstanceSavePanel	[weka.gui.streams.InstanceSavePanel::java.awt.TextField arffFile_Tex, weka.gui.streams.InstanceSavePanel::setArffFile(java.lang.String):void, weka.gui.streams.InstanceSavePanel::getArffFile():java.lang.String]
weka.gui.GUIChooser	[weka.gui.GUIChooser::javax.swing.JButton m_ExplorerBut, weka.gui.GUIChooser::java.awt.Image m_Icon, weka.gui.GUIChooser::javax.swing.JFrame m_ExplorerFrame, weka.gui.GUIChooser::javax.swing.JFrame m_ExperimenterFrame, weka.gui.GUIChooser::weka.gui.SimpleCLI m_SimpleCLI, weka.gui.GUIChooser::java.util.Vector m_ArffViewers, weka.gui.GUIChooser::javax.swing.JFrame m_KnowledgeFlowFrame, weka.gui.GUIChooser::java.lang.String m_pendingKnowledgeFlowLoad, weka.gui.GUIChooser::showKnowledgeFlow(java.lang.String):void, weka.gui.GUIChooser::showExplorer(java.lang.String):void, weka.gui.GUIChooser::main(java.lang.String[]):void, weka.gui.GUIChooser::javax.swing.JFrame m_GroovyConsoleFrame, weka.gui.GUIChooser::javax.swing.JFrame m_JythonConsoleFrame, weka.gui.GUIChooser::javax.swing.JFrame m_SqlViewerFrame, weka.gui.GUIChooser::javax.swing.JFrame m_EnsembleLibraryFrame, weka.gui.GUIChooser::java.util.Vector m_Plots, weka.gui.GUIChooser::java.util.Vector m_ROCs, weka.gui.GUIChooser::java.util.Vector m_TreeVisualizers, weka.gui.GUIChooser::java.util.Vector m_GraphVisualizers, weka.gui.GUIChooser::javax.swing.JFrame m_BoundaryVisualizerFrame, weka.gui.GUIChooser::javax.swing.JFrame m_SystemInfoFrame, weka.gui.GUIChooser::checkExit():void]
weka.core.pmml.TargetMetaInfo	[weka.core.pmml.TargetMetaInfo::double m_min, weka.core.pmml.TargetMetaInfo::double m_max, weka.core.pmml.TargetMetaInfo::double m_rescaleConstant, weka.core.pmml.TargetMetaInfo::double m_rescaleFactor, weka.core.pmml.TargetMetaInfo::java.lang.String m_castInteger, weka.core.pmml.TargetMetaInfo::applyMinMaxRescaleCast(double):double]
weka.gui.arffviewer.ArffViewerMainPanel	[weka.gui.arffviewer.ArffViewerMainPanel::java.awt.Container parent, weka.gui.arffviewer.ArffViewerMainPanel::getParentFrame():javax.swing.JFrame, weka.gui.arffviewer.ArffViewerMainPanel::getParentInternalFrame():javax.swing.JInternalFrame, weka.gui.arffviewer.ArffViewerMainPanel::close():void, weka.gui.arffviewer.ArffViewerMainPanel::updateFrameTitle():void, weka.gui.arffviewer.ArffViewerMainPanel::java.lang.String frameTitle, weka.gui.arffviewer.ArffViewerMainPanel::getFrameTitle():java.lang.String]
weka.gui.arffviewer.ArffViewerMainPanel	[weka.gui.arffviewer.ArffViewerMainPanel::java.awt.Container parent, weka.gui.arffviewer.ArffViewerMainPanel::getParentFrame():javax.swing.JFrame, weka.gui.arffviewer.ArffViewerMainPanel::getParentInternalFrame():javax.swing.JInternalFrame, weka.gui.arffviewer.ArffViewerMainPanel::close():void, weka.gui.arffviewer.ArffViewerMainPanel::updateFrameTitle():void]
weka.gui.experiment.SetupPanel	[weka.gui.experiment.SetupPanel::weka.experiment.Experiment m_Exp, weka.gui.experiment.SetupPanel::main(java.lang.String[]):void, weka.gui.experiment.SetupPanel::javax.swing.filechooser.FileFilter m_ExpFilter, weka.gui.experiment.SetupPanel::javax.swing.filechooser.FileFilter m_KOMLFilter, weka.gui.experiment.SetupPanel::javax.swing.filechooser.FileFilter m_XMLFilter, weka.gui.experiment.SetupPanel::javax.swing.JFileChooser m_FileChooser, weka.gui.experiment.SetupPanel::openExperiment():void, weka.gui.experiment.SetupPanel::saveExperiment():void]
weka.gui.experiment.SetupPanel	[weka.gui.experiment.SetupPanel::javax.swing.filechooser.FileFilter m_ExpFilter, weka.gui.experiment.SetupPanel::javax.swing.filechooser.FileFilter m_KOMLFilter, weka.gui.experiment.SetupPanel::javax.swing.filechooser.FileFilter m_XMLFilter, weka.gui.experiment.SetupPanel::javax.swing.JFileChooser m_FileChooser, weka.gui.experiment.SetupPanel::openExperiment():void, weka.gui.experiment.SetupPanel::saveExperiment():void]
weka.gui.graphvisualizer.DotParser	[weka.gui.graphvisualizer.DotParser::weka.core.FastVector m_nodes, weka.gui.graphvisualizer.DotParser::stmt(java.io.StreamTokenizer):void, weka.gui.graphvisualizer.DotParser::nodeID(java.io.StreamTokenizer):void, weka.gui.graphvisualizer.DotParser::edgeStmt(java.io.StreamTokenizer, int):void, weka.gui.graphvisualizer.DotParser::weka.core.FastVector m_edges, weka.gui.graphvisualizer.DotParser::nodeStmt(java.io.StreamTokenizer, int):void]
weka.core.FindWithCapabilities	[weka.core.FindWithCapabilities::weka.core.CapabilitiesHandler m_Handler, weka.core.FindWithCapabilities::setHandler(weka.core.CapabilitiesHandler):void, weka.core.FindWithCapabilities::java.lang.String m_Filename, weka.core.FindWithCapabilities::weka.core.SingleIndex m_ClassIndex, weka.core.FindWithCapabilities::setClassIndex(java.lang.String):void, weka.core.FindWithCapabilities::getClassIndex():java.lang.String, weka.core.FindWithCapabilities::setFilename(java.lang.String):void]
weka.core.FindWithCapabilities	[weka.core.FindWithCapabilities::java.lang.String m_Filename, weka.core.FindWithCapabilities::weka.core.SingleIndex m_ClassIndex, weka.core.FindWithCapabilities::setClassIndex(java.lang.String):void, weka.core.FindWithCapabilities::getClassIndex():java.lang.String, weka.core.FindWithCapabilities::setFilename(java.lang.String):void]
weka.core.Range	[weka.core.Range::rangeSingle(java.lang.String):int, weka.core.Range::rangeLower(java.lang.String):int, weka.core.Range::rangeUpper(java.lang.String):int, weka.core.Range::isValidRange(java.lang.String):boolean]
weka.core.xml.XMLInstances	[weka.core.xml.XMLInstances::createMetadata(org.w3c.dom.Element):weka.core.ProtectedProperties, weka.core.xml.XMLInstances::createAttribute(org.w3c.dom.Element):weka.core.Attribute, weka.core.xml.XMLInstances::createAttributes(org.w3c.dom.Element, int[]):java.util.ArrayList<weka.core.Attribute>, weka.core.xml.XMLInstances::createLabels(org.w3c.dom.Element):java.util.ArrayList<java.lang.String>, weka.core.xml.XMLInstances::headerFromXML():weka.core.Instances]
weka.core.xml.XMLInstances	[weka.core.xml.XMLInstances::createInstance(weka.core.Instances, org.w3c.dom.Element):weka.core.Instance, weka.core.xml.XMLInstances::createInstances(weka.core.Instances, org.w3c.dom.Element):weka.core.Instances, weka.core.xml.XMLInstances::dataFromXML(weka.core.Instances):weka.core.Instances]
weka.gui.WekaTaskMonitor	[weka.gui.WekaTaskMonitor::javax.swing.JLabel m_MonitorLabel, weka.gui.WekaTaskMonitor::javax.swing.ImageIcon m_iconStationary, weka.gui.WekaTaskMonitor::javax.swing.ImageIcon m_iconAnimated, weka.gui.WekaTaskMonitor::boolean m_animating, weka.gui.WekaTaskMonitor::updateMonitor():void]
weka.gui.visualize.VisualizePanel.PlotPanel	[weka.gui.visualize.VisualizePanel.PlotPanel::int m_sIndex, weka.gui.visualize.VisualizePanel.PlotPanel::setSindex(int):void, weka.gui.visualize.VisualizePanel.PlotPanel::boolean m_createShape, weka.gui.visualize.VisualizePanel.PlotPanel::weka.core.FastVector m_shapePoints, weka.gui.visualize.VisualizePanel.PlotPanel::weka.core.FastVector m_shapes, weka.gui.visualize.VisualizePanel.PlotPanel::setShapes(weka.core.FastVector):void]
weka.core.matrix.ExponentialFormat	[weka.core.matrix.ExponentialFormat::int digits, weka.core.matrix.ExponentialFormat::int exp, weka.core.matrix.ExponentialFormat::boolean trailing, weka.core.matrix.ExponentialFormat::width():int, weka.core.matrix.ExponentialFormat::pattern():java.lang.String]
weka.core.xml.XMLDocument	[weka.core.xml.XMLDocument::javax.xml.parsers.DocumentBuilderFactory m_Factory, weka.core.xml.XMLDocument::setValidating(boolean):void, weka.core.xml.XMLDocument::boolean m_Validating, weka.core.xml.XMLDocument::javax.xml.parsers.DocumentBuilder m_Builder]
weka.core.xml.XMLDocument	[weka.core.xml.XMLDocument::javax.xml.xpath.XPath m_XPath, weka.core.xml.XMLDocument::eval(java.lang.String, javax.xml.namespace.QName):java.lang.Object, weka.core.xml.XMLDocument::findNodes(java.lang.String):org.w3c.dom.NodeList, weka.core.xml.XMLDocument::getNode(java.lang.String):org.w3c.dom.Node, weka.core.xml.XMLDocument::evalBoolean(java.lang.String):java.lang.Boolean, weka.core.xml.XMLDocument::evalDouble(java.lang.String):java.lang.Double, weka.core.xml.XMLDocument::evalString(java.lang.String):java.lang.String]
weka.datagenerators.clusterers.BIRCHCluster.GridVector	[weka.datagenerators.clusterers.BIRCHCluster.GridVector::int[] m_GridVector, weka.datagenerators.clusterers.BIRCHCluster.GridVector::int m_Size, weka.datagenerators.clusterers.BIRCHCluster.GridVector::addOne():void, weka.datagenerators.clusterers.BIRCHCluster.GridVector::overflow(int):boolean]
weka.gui.SaveBuffer	[weka.gui.SaveBuffer::java.awt.Component m_parentComponent, weka.gui.SaveBuffer::save(java.lang.StringBuffer):boolean, weka.gui.SaveBuffer::java.lang.String m_lastvisitedDirectory, weka.gui.SaveBuffer::main(java.lang.String[]):void]
weka.gui.experiment.DatasetListPanel	[weka.gui.experiment.DatasetListPanel::weka.experiment.Experiment m_Exp, weka.gui.experiment.DatasetListPanel::javax.swing.JButton m_AddBut, weka.gui.experiment.DatasetListPanel::javax.swing.JList m_List, weka.gui.experiment.DatasetListPanel::setExperiment(weka.experiment.Experiment):void]
weka.gui.scripting.ScriptingPanel	[weka.gui.scripting.ScriptingPanel::java.io.PipedOutputStream m_POO, weka.gui.scripting.ScriptingPanel::java.io.PipedOutputStream m_POE, weka.gui.scripting.ScriptingPanel::boolean m_Debug, weka.gui.scripting.ScriptingPanel::initialize():void]
weka.gui.sql.QueryPanel	[weka.gui.sql.QueryPanel::java.util.HashSet m_HistoryChangedListeners, weka.gui.sql.QueryPanel::removeHistoryChangedListener(weka.gui.sql.event.HistoryChangedListener):void, weka.gui.sql.QueryPanel::javax.swing.DefaultListModel m_History, weka.gui.sql.QueryPanel::addHistory(java.lang.String):void, weka.gui.sql.QueryPanel::setHistory(javax.swing.DefaultListModel):void, weka.gui.sql.QueryPanel::notifyHistoryChangedListeners():void]
weka.gui.sql.QueryPanel	[weka.gui.sql.QueryPanel::javax.swing.JFrame m_Parent, weka.gui.sql.QueryPanel::showHistory():void, weka.gui.sql.QueryPanel::java.util.HashSet m_HistoryChangedListeners, weka.gui.sql.QueryPanel::removeHistoryChangedListener(weka.gui.sql.event.HistoryChangedListener):void, weka.gui.sql.QueryPanel::javax.swing.DefaultListModel m_History, weka.gui.sql.QueryPanel::addHistory(java.lang.String):void, weka.gui.sql.QueryPanel::setHistory(javax.swing.DefaultListModel):void, weka.gui.sql.QueryPanel::notifyHistoryChangedListeners():void]
weka.gui.visualize.PlotData2D	[weka.gui.visualize.PlotData2D::int m_xIndex, weka.gui.visualize.PlotData2D::setXindex(int):void, weka.gui.visualize.PlotData2D::int m_yIndex, weka.gui.visualize.PlotData2D::setYindex(int):void, weka.gui.visualize.PlotData2D::int m_cIndex, weka.gui.visualize.PlotData2D::setCindex(int):void]
weka.gui.visualize.PlotData2D	[weka.gui.visualize.PlotData2D::int m_xIndex, weka.gui.visualize.PlotData2D::setXindex(int):void, weka.gui.visualize.PlotData2D::int m_yIndex, weka.gui.visualize.PlotData2D::setYindex(int):void]
weka.classifiers.functions.SMO	[weka.classifiers.functions.SMO::turnChecksOff():void, weka.classifiers.functions.SMO::turnChecksOn():void, weka.classifiers.functions.SMO::setChecksTurnedOff(boolean):void]
weka.classifiers.lazy.KStar	[weka.classifiers.lazy.KStar::int[][] m_RandClassCols, weka.classifiers.lazy.KStar::generateRandomClassColomns():void, weka.classifiers.lazy.KStar::randomize(int[], java.util.Random):int[]]
weka.classifiers.rules.OneR	[weka.classifiers.rules.OneR::newRule(weka.core.Attribute, weka.core.Instances):weka.classifiers.rules.OneR.OneRRule, weka.classifiers.rules.OneR::newNominalRule(weka.core.Attribute, weka.core.Instances, int[]):weka.classifiers.rules.OneR.OneRRule, weka.classifiers.rules.OneR::newNumericRule(weka.core.Attribute, weka.core.Instances, int[]):weka.classifiers.rules.OneR.OneRRule]
weka.core.Capabilities	[weka.core.Capabilities::dependencies():java.util.Iterator, weka.core.Capabilities::enableDependency(weka.core.Capabilities.Capability):void, weka.core.Capabilities::disableDependency(weka.core.Capabilities.Capability):void, weka.core.Capabilities::hasDependency(weka.core.Capabilities.Capability):boolean, weka.core.Capabilities::hasDependencies():boolean]
weka.core.Capabilities	[weka.core.Capabilities::capabilities():java.util.Iterator, weka.core.Capabilities::enable(weka.core.Capabilities.Capability):void, weka.core.Capabilities::disable(weka.core.Capabilities.Capability):void]
weka.core.Capabilities	[weka.core.Capabilities::supports(weka.core.Capabilities):boolean, weka.core.Capabilities::getClassCapabilities():weka.core.Capabilities, weka.core.Capabilities::getAttributeCapabilities():weka.core.Capabilities, weka.core.Capabilities::getOtherCapabilities():weka.core.Capabilities, weka.core.Capabilities::handles(weka.core.Capabilities.Capability):boolean, weka.core.Capabilities::capabilities():java.util.Iterator, weka.core.Capabilities::enable(weka.core.Capabilities.Capability):void, weka.core.Capabilities::disable(weka.core.Capabilities.Capability):void]
weka.core.ClassCache	[weka.core.ClassCache::cleanUp(java.lang.String):java.lang.String, weka.core.ClassCache::add(java.lang.String):boolean, weka.core.ClassCache::remove(java.lang.String):boolean, weka.core.ClassCache::extractPackage(java.lang.String):java.lang.String]
weka.core.Debug.Random	[weka.core.Debug.Random::boolean m_Debug, weka.core.Debug.Random::println(java.lang.String):void, weka.core.Debug.Random::weka.core.Debug.Log m_Log]
weka.core.Instances	[weka.core.Instances::deleteWithMissing(int):void, weka.core.Instances::stratStep(int):void, weka.core.Instances::instance(int):weka.core.Instance, weka.core.Instances::numInstances():int, weka.core.Instances::stringWithoutHeader():java.lang.String, weka.core.Instances::getRandomNumberGenerator(long):java.util.Random]
weka.core.SerializedObject	[weka.core.SerializedObject::boolean m_isCompressed, weka.core.SerializedObject::getObject():java.lang.Object, weka.core.SerializedObject::boolean m_isJython]
weka.core.converters.ArffLoader.ArffReader	[weka.core.converters.ArffLoader.ArffReader::double[] m_ValueBuffer, weka.core.converters.ArffLoader.ArffReader::int[] m_IndicesBuffer, weka.core.converters.ArffLoader.ArffReader::initBuffers():void]
weka.core.converters.ArffLoader.ArffReader	[weka.core.converters.ArffLoader.ArffReader::java.io.StreamTokenizer m_Tokenizer, weka.core.converters.ArffLoader.ArffReader::readHeader(int):void, weka.core.converters.ArffLoader.ArffReader::parseAttribute(java.util.ArrayList<weka.core.Attribute>):java.util.ArrayList<weka.core.Attribute>, weka.core.converters.ArffLoader.ArffReader::errorMessage(java.lang.String):void, weka.core.converters.ArffLoader.ArffReader::getLineNo():int, weka.core.converters.ArffLoader.ArffReader::getIndex():void, weka.core.converters.ArffLoader.ArffReader::getLastToken(boolean):void, weka.core.converters.ArffLoader.ArffReader::getInstanceWeight():double, weka.core.converters.ArffLoader.ArffReader::getNextToken():void, weka.core.converters.ArffLoader.ArffReader::int m_Lines, weka.core.converters.ArffLoader.ArffReader::getInstance(weka.core.Instances, boolean):weka.core.Instance, weka.core.converters.ArffLoader.ArffReader::weka.core.Instances m_Data, weka.core.converters.ArffLoader.ArffReader::getFirstToken():void, weka.core.converters.ArffLoader.ArffReader::initTokenizer():void, weka.core.converters.ArffLoader.ArffReader::readTillEOL():void, weka.core.converters.ArffLoader.ArffReader::getInstanceSparse(boolean):weka.core.Instance, weka.core.converters.ArffLoader.ArffReader::getInstanceFull(boolean):weka.core.Instance, weka.core.converters.ArffLoader.ArffReader::boolean m_batchMode, weka.core.converters.ArffLoader.ArffReader::boolean m_retainStringValues]
weka.core.converters.ArffLoader.ArffReader	[weka.core.converters.ArffLoader.ArffReader::java.io.StreamTokenizer m_Tokenizer, weka.core.converters.ArffLoader.ArffReader::readHeader(int):void, weka.core.converters.ArffLoader.ArffReader::parseAttribute(java.util.ArrayList<weka.core.Attribute>):java.util.ArrayList<weka.core.Attribute>, weka.core.converters.ArffLoader.ArffReader::errorMessage(java.lang.String):void, weka.core.converters.ArffLoader.ArffReader::getLineNo():int, weka.core.converters.ArffLoader.ArffReader::getIndex():void, weka.core.converters.ArffLoader.ArffReader::getLastToken(boolean):void, weka.core.converters.ArffLoader.ArffReader::getInstanceWeight():double, weka.core.converters.ArffLoader.ArffReader::getNextToken():void, weka.core.converters.ArffLoader.ArffReader::int m_Lines, weka.core.converters.ArffLoader.ArffReader::getInstance(weka.core.Instances, boolean):weka.core.Instance, weka.core.converters.ArffLoader.ArffReader::weka.core.Instances m_Data, weka.core.converters.ArffLoader.ArffReader::getFirstToken():void, weka.core.converters.ArffLoader.ArffReader::initTokenizer():void, weka.core.converters.ArffLoader.ArffReader::readTillEOL():void, weka.core.converters.ArffLoader.ArffReader::getInstanceSparse(boolean):weka.core.Instance, weka.core.converters.ArffLoader.ArffReader::getInstanceFull(boolean):weka.core.Instance, weka.core.converters.ArffLoader.ArffReader::boolean m_batchMode, weka.core.converters.ArffLoader.ArffReader::boolean m_retainStringValues, weka.core.converters.ArffLoader.ArffReader::compactify():void, weka.core.converters.ArffLoader.ArffReader::getStructure():weka.core.Instances]
weka.core.converters.ArffLoader.ArffReader	[weka.core.converters.ArffLoader.ArffReader::java.io.StreamTokenizer m_Tokenizer, weka.core.converters.ArffLoader.ArffReader::readHeader(int):void, weka.core.converters.ArffLoader.ArffReader::parseAttribute(java.util.ArrayList<weka.core.Attribute>):java.util.ArrayList<weka.core.Attribute>, weka.core.converters.ArffLoader.ArffReader::errorMessage(java.lang.String):void, weka.core.converters.ArffLoader.ArffReader::getLineNo():int, weka.core.converters.ArffLoader.ArffReader::getIndex():void, weka.core.converters.ArffLoader.ArffReader::getLastToken(boolean):void, weka.core.converters.ArffLoader.ArffReader::getInstanceWeight():double, weka.core.converters.ArffLoader.ArffReader::getNextToken():void, weka.core.converters.ArffLoader.ArffReader::int m_Lines, weka.core.converters.ArffLoader.ArffReader::getInstance(weka.core.Instances, boolean):weka.core.Instance, weka.core.converters.ArffLoader.ArffReader::weka.core.Instances m_Data, weka.core.converters.ArffLoader.ArffReader::getFirstToken():void, weka.core.converters.ArffLoader.ArffReader::initTokenizer():void, weka.core.converters.ArffLoader.ArffReader::readTillEOL():void]
weka.core.converters.ConverterUtils.DataSource	[weka.core.converters.ConverterUtils.DataSource::java.io.File m_File, weka.core.converters.ConverterUtils.DataSource::java.net.URL m_URL, weka.core.converters.ConverterUtils.DataSource::getDataSet(int):weka.core.Instances]
weka.gui.ETable	[weka.gui.ETable::java.awt.Color MAC_OS_ALTERNATE_ROW_COLOR, weka.gui.ETable::alternateRowColor():java.awt.Color, weka.gui.ETable::colorForRow(int):java.awt.Color]
weka.gui.ETable	[weka.gui.ETable::java.awt.Color MAC_FOCUSED_SELECTED_CELL_HORIZONTAL_LINE_COLOR, weka.gui.ETable::java.awt.Color MAC_UNFOCUSED_SELECTED_CELL_HORIZONTAL_LINE_COLOR, weka.gui.ETable::java.awt.Color MAC_FOCUSED_UNSELECTED_VERTICAL_LINE_COLOR, weka.gui.ETable::java.awt.Color MAC_FOCUSED_SELECTED_VERTICAL_LINE_COLOR, weka.gui.ETable::java.awt.Color MAC_UNFOCUSED_SELECTED_VERTICAL_LINE_COLOR, weka.gui.ETable::fixMacOsCellRendererBorder(javax.swing.JComponent, boolean, boolean):void]
weka.gui.ListSelectorDialog	[weka.gui.ListSelectorDialog::javax.swing.JList m_List, weka.gui.ListSelectorDialog::int m_Result, weka.gui.ListSelectorDialog::showDialog():int]
weka.gui.ListSelectorDialog	[weka.gui.ListSelectorDialog::javax.swing.JButton m_PatternBut, weka.gui.ListSelectorDialog::selectPattern():void, weka.gui.ListSelectorDialog::java.lang.String m_PatternRegEx]
weka.gui.experiment.RunNumberPanel	[weka.gui.experiment.RunNumberPanel::javax.swing.JTextField m_LowerText, weka.gui.experiment.RunNumberPanel::getLower():int, weka.gui.experiment.RunNumberPanel::weka.experiment.Experiment m_Exp, weka.gui.experiment.RunNumberPanel::setExperiment(weka.experiment.Experiment):void]
weka.gui.explorer.ClassifierErrorsPlotInstances	[weka.gui.explorer.ClassifierErrorsPlotInstances::int m_MinimumPlotSizeNumeric, weka.gui.explorer.ClassifierErrorsPlotInstances::int m_MaximumPlotSizeNumeric, weka.gui.explorer.ClassifierErrorsPlotInstances::scaleNumericPredictions():void]
weka.gui.explorer.ClustererPanel	[weka.gui.explorer.ClustererPanel::weka.gui.GenericObjectEditor m_ClustererEditor, weka.gui.explorer.ClustererPanel::javax.swing.JList m_ignoreKeyList, weka.gui.explorer.ClustererPanel::setIgnoreColumns():void]
weka.gui.visualize.AttributePanel.AttributeSpacing	[weka.gui.visualize.AttributePanel.AttributeSpacing::double m_maxVal, weka.gui.visualize.AttributePanel.AttributeSpacing::convertToPanel(double):double, weka.gui.visualize.AttributePanel.AttributeSpacing::double m_minVal]
weka.classifiers.rules.RuleStats	[weka.classifiers.rules.RuleStats::weka.core.Instances m_Data, weka.classifiers.rules.RuleStats::weka.core.FastVector m_Ruleset, weka.classifiers.rules.RuleStats::weka.core.FastVector m_SimpleStats, weka.classifiers.rules.RuleStats::weka.core.FastVector m_Filtered, weka.classifiers.rules.RuleStats::countData():void, weka.classifiers.rules.RuleStats::addAndUpdate(weka.classifiers.rules.Rule):void, weka.classifiers.rules.RuleStats::minDataDLIfDeleted(int, double, boolean):double, weka.classifiers.rules.RuleStats::countData(int, weka.core.Instances, double[][]):void, weka.classifiers.rules.RuleStats::reduceDL(double, boolean):void, weka.classifiers.rules.RuleStats::removeLast():void, weka.classifiers.rules.RuleStats::weka.core.FastVector m_Distributions, weka.classifiers.rules.RuleStats::getDistributions(int):double[], weka.classifiers.rules.RuleStats::getSimpleStats(int):double[], weka.classifiers.rules.RuleStats::minDataDLIfExists(int, double, boolean):double]
weka.classifiers.rules.RuleStats	[weka.classifiers.rules.RuleStats::weka.core.Instances m_Data, weka.classifiers.rules.RuleStats::weka.core.FastVector m_Ruleset, weka.classifiers.rules.RuleStats::weka.core.FastVector m_SimpleStats, weka.classifiers.rules.RuleStats::weka.core.FastVector m_Filtered, weka.classifiers.rules.RuleStats::countData():void, weka.classifiers.rules.RuleStats::addAndUpdate(weka.classifiers.rules.Rule):void, weka.classifiers.rules.RuleStats::minDataDLIfDeleted(int, double, boolean):double, weka.classifiers.rules.RuleStats::countData(int, weka.core.Instances, double[][]):void, weka.classifiers.rules.RuleStats::reduceDL(double, boolean):void, weka.classifiers.rules.RuleStats::removeLast():void, weka.classifiers.rules.RuleStats::weka.core.FastVector m_Distributions, weka.classifiers.rules.RuleStats::getDistributions(int):double[]]
weka.classifiers.rules.RuleStats	[weka.classifiers.rules.RuleStats::double m_Total, weka.classifiers.rules.RuleStats::setNumAllConds(double):void, weka.classifiers.rules.RuleStats::double MDL_THEORY_WEIGHT, weka.classifiers.rules.RuleStats::theoryDL(int):double, weka.classifiers.rules.RuleStats::potential(int, double, double[], double[], boolean):double]
weka.core.Attribute	[weka.core.Attribute::double m_LowerBound, weka.core.Attribute::boolean m_LowerBoundIsOpen, weka.core.Attribute::double m_UpperBound, weka.core.Attribute::boolean m_UpperBoundIsOpen, weka.core.Attribute::isInRange(double):boolean, weka.core.Attribute::isInRange(int):boolean, weka.core.Attribute::setNumericRange(java.lang.String):void]
weka.classifiers.CostMatrix	[weka.classifiers.CostMatrix::java.lang.Object[][] m_matrix, weka.classifiers.CostMatrix::initialize():void, weka.classifiers.CostMatrix::readOldFormat(java.io.Reader):void, weka.classifiers.CostMatrix::setCell(int, int, java.lang.Object):void]
weka.core.neighboursearch.KDTree	[weka.core.neighboursearch.KDTree::refineOwners(weka.core.neighboursearch.kdtrees.KDTreeNode, weka.core.Instances, int[]):int[], weka.core.neighboursearch.KDTree::distanceToHrect(weka.core.neighboursearch.kdtrees.KDTreeNode, weka.core.Instance):double, weka.core.neighboursearch.KDTree::clipToInsideHrect(weka.core.neighboursearch.kdtrees.KDTreeNode, weka.core.Instance):boolean, weka.core.neighboursearch.KDTree::candidateIsFullOwner(weka.core.neighboursearch.kdtrees.KDTreeNode, weka.core.Instance, weka.core.Instance):boolean]
weka.gui.SimpleDateFormatEditor.CustomEditor	[weka.gui.SimpleDateFormatEditor.CustomEditor::javax.swing.JTextField m_FormatText, weka.gui.SimpleDateFormatEditor.CustomEditor::defaultFormat():void, weka.gui.SimpleDateFormatEditor.CustomEditor::applyFormat():void, weka.gui.SimpleDateFormatEditor.CustomEditor::formatChanged():void, weka.gui.SimpleDateFormatEditor.CustomEditor::isValidFormat():boolean]
weka.gui.beans.SubstringReplacer.MatchReplace	[weka.gui.beans.SubstringReplacer.MatchReplace::java.util.regex.Pattern m_regexPattern, weka.gui.beans.SubstringReplacer.MatchReplace::java.lang.String m_matchS, weka.gui.beans.SubstringReplacer.MatchReplace::java.lang.String m_replaceS, weka.gui.beans.SubstringReplacer.MatchReplace::apply(java.lang.String):java.lang.String]
weka.gui.explorer.PreprocessPanel	[weka.gui.explorer.PreprocessPanel::javax.swing.JButton m_UndoBut, weka.gui.explorer.PreprocessPanel::java.io.File[] m_tempUndoFiles, weka.gui.explorer.PreprocessPanel::int m_tempUndoIndex, weka.gui.explorer.PreprocessPanel::addUndoPoint():void, weka.gui.explorer.PreprocessPanel::undo():void]
weka.gui.visualize.ClassPanel	[weka.gui.visualize.ClassPanel::boolean m_isEnabled, weka.gui.visualize.ClassPanel::boolean m_isNumeric, weka.gui.visualize.ClassPanel::int m_oldWidth, weka.gui.visualize.ClassPanel::setNominal():void]
